(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{176:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return b})),t.d(a,"default",(function(){return s}));var n=t(2),r=t(9),c=(t(0),t(275)),i={title:"Cassandra"},l={id:"programming/database/Cassandra",isDocsHomePage:!1,title:"Cassandra",description:"An example to play with Cassandra on Docker",source:"@site/docs/programming/database/Cassandra.md",permalink:"/docs/programming/database/Cassandra",editUrl:"https://github.com/lingt-xyz/io/tree/master/docs/programming/database/Cassandra.md",lastUpdatedAt:1636556078,sidebar:"database"},b=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Get the Image",id:"get-the-image",children:[]},{value:"Start cassandra",id:"start-cassandra",children:[{value:"One instance",id:"one-instance",children:[]},{value:"Cluster",id:"cluster",children:[]}]},{value:"Connection",id:"connection",children:[{value:"Bash",id:"bash",children:[]},{value:"cqlsh",id:"cqlsh",children:[]},{value:"From the host",id:"from-the-host",children:[]},{value:"Update cofig",id:"update-cofig",children:[]}]},{value:"cqlsh",id:"cqlsh-1",children:[{value:"Keyspace",id:"keyspace",children:[]},{value:"Table",id:"table",children:[]}]},{value:"Schema Migration",id:"schema-migration",children:[]},{value:"Data Migration",id:"data-migration",children:[{value:"Export",id:"export",children:[]},{value:"Import",id:"import",children:[]}]},{value:"Debug",id:"debug",children:[{value:"Log",id:"log",children:[]},{value:"Python driver",id:"python-driver",children:[]}]},{value:"References",id:"references",children:[]}],o={rightToc:b};function s(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},o,t,{components:a,mdxType:"MDXLayout"}),Object(c.b)("p",null,"An example to play with Cassandra on Docker"),Object(c.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Have a docker account")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Docker installed"))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"get-the-image"},"Get the Image"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Docker login: ",Object(c.b)("inlineCode",{parentName:"li"},"$ docker login")),Object(c.b)("li",{parentName:"ol"},"Pull cassandra image: ",Object(c.b)("inlineCode",{parentName:"li"},"$ docker pull cassandra:3.11.4"))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"start-cassandra"},"Start cassandra"),Object(c.b)("h3",{id:"one-instance"},"One instance"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"$ docker run -p 9042:9042 --name cassandra-node1 -e CASSANDRA_CLUSTER_NAME=VEXCluster -d cassandra:3.11.4"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"-p 9042:9042"),": public the port ",Object(c.b)("inlineCode",{parentName:"li"},"9042")," to the host ",Object(c.b)("inlineCode",{parentName:"li"},"9042")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"--name cassandra-node1"),": name the container"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"-e CASSANDRA_CLUSTER_NAME=VEXCluster"),": set the variable ",Object(c.b)("inlineCode",{parentName:"li"},"CASSANDRA_CLUSTER_NAME")," to be ",Object(c.b)("inlineCode",{parentName:"li"},"VEXCluster")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"-d"),": run the container in background (detach)")))),Object(c.b)("h3",{id:"cluster"},"Cluster"),Object(c.b)("p",null,"Start the instance as described above. To start other instances, just tell each new node where the first is."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"$ docker run --name cassandra-node2 -e CASSANDRA_SEEDS=\"$(docker inspect --format='{{ .NetworkSettings.IPAddress }}' cassandra-node1)\" -e CASSANDRA_CLUSTER_NAME=VEXCluster -d cassandra:3.11.4"))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"connection"},"Connection"),Object(c.b)("h3",{id:"bash"},"Bash"),Object(c.b)("p",null,"Execute the bash in the docker in an interactive way:"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"$ docker exec -it cassandra-example bash")),Object(c.b)("h3",{id:"cqlsh"},"cqlsh"),Object(c.b)("p",null,"Run ",Object(c.b)("inlineCode",{parentName:"p"},"cqlsh")," in the docker:"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"$ docker run -it [--network name-of-a-network] --rm cassandra:3.11.4 cqlsh cassandra-example")),Object(c.b)("h3",{id:"from-the-host"},"From the host"),Object(c.b)("p",null,"If we want to directly connect to the cassandra in the docerk, we have to expose the port to the host."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"$ docker run -p 9042:9042 --rm --name cassandra-example -d cassandra:3.11.4")),Object(c.b)("p",null,"Then we can use ",Object(c.b)("inlineCode",{parentName:"p"},"cqlsh")," locally."),Object(c.b)("h3",{id:"update-cofig"},"Update cofig"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"$ docker run -p 9042:9042 --rm --name cassandra-example -d cassandra:3.11.4 -Dcassandra.config=file:////docker/apth/cassandra.yaml")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"cqlsh-1"},"cqlsh"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"cqlsh version: ",Object(c.b)("inlineCode",{parentName:"li"},"$ show version"))),Object(c.b)("h3",{id:"keyspace"},"Keyspace"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DESC[RIBE] KEYSPACES;")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"USE $KEYSPACE_NAME;")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DESC[RIBE] KEYSPACE;")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DESC[RIBE] $KEYSPACE_NAME;"))),Object(c.b)("h3",{id:"table"},"Table"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DESC[RIBE] TABLES;")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"DESC[RIBE] $TABLE_NAME;"))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"schema-migration"},"Schema Migration"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'$ docker exec -it ${cassandra_container} bash\n# Export a keyspace\n$ cqlsh -e "DESC KEYSPACE $KEYSPACE_NAME" > user_schema.cql\n# Export the entire database schema\n$ cqlsh -e "DESC SCHEMA" > db_schema.cql\n\n# Import the schema\n$ docker exec -it ${cassandra_container} cqlsh\n$ source `user_schema.cql`\n')),Object(c.b)("h2",{id:"data-migration"},"Data Migration"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Get cassandra container\n$ docker ps | grep cassandra\n\n$ docker exec -it ${cassandra_container} cqlsh\n\n$ cqlsh> show version;\n[cqlsh 5.0.1 | Cassandra 3.11.1 | CQL spec 3.4.4 | Native protocol v4]\n\n$ cqlsh> USE $KEYSPACE_NAME;\n\n")),Object(c.b)("h3",{id:"export"},"Export"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"COPY $TABLE_NAME TO '$CSV_FILE_FULL_PATH'\n")),Object(c.b)("h3",{id:"import"},"Import"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"COPY $TABLE_NAME FROM '$CSV_FILE_FULL_PATH'\n")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"debug"},"Debug"),Object(c.b)("h3",{id:"log"},"Log"),Object(c.b)("p",null,"Check logs through docker:"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"$ docker logs cassandra-example")),Object(c.b)("h3",{id:"python-driver"},"Python driver"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Install the driver: ",Object(c.b)("inlineCode",{parentName:"li"},"pip install cassandra-driver"))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"references"},"References"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://hub.docker.com/_/cassandra"}),"Docker Offical Images: cassandra")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://medium.com/@michaeljpr/five-minute-guide-getting-started-with-cassandra-on-docker-4ef69c710d84"}),"Five Minute Guide: Getting Started with Cassandra on Docker"))))}s.isMDXComponent=!0},275:function(e,a,t){"use strict";t.d(a,"a",(function(){return d})),t.d(a,"b",(function(){return h}));var n=t(0),r=t.n(n);function c(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){c(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function b(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=r.a.createContext({}),s=function(e){var a=r.a.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=s(e.components);return r.a.createElement(o.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},u=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),d=s(t),u=n,h=d["".concat(i,".").concat(u)]||d[u]||p[u]||c;return t?r.a.createElement(h,l(l({ref:a},o),{},{components:t})):r.a.createElement(h,l({ref:a},o))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var c=t.length,i=new Array(c);i[0]=u;var l={};for(var b in a)hasOwnProperty.call(a,b)&&(l[b]=a[b]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var o=2;o<c;o++)i[o]=t[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);