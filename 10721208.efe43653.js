(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{144:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return p}));var r=t(2),o=t(9),a=(t(0),t(274)),c={title:"Mutex"},i={id:"programming/Go/5_5Mutex",isDocsHomePage:!1,title:"Mutex",description:"We've seen how channels are great for communication among goroutines.",source:"@site/docs/programming/Go/5_5Mutex.mdx",permalink:"/docs/programming/Go/5_5Mutex",editUrl:"https://github.com/lingt-xyz/io/tree/master/docs/programming/Go/5_5Mutex.mdx",lastUpdatedAt:1598157283,sidebar:"go",previous:{title:"Select",permalink:"/docs/programming/Go/5_4Select"},next:{title:"Code Organization",permalink:"/docs/programming/Go/6Code_Organization"}},u=[],l={rightToc:u};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"We've seen how channels are great for communication among goroutines."),Object(a.b)("p",null,"But what if we don't need communication? What if we just want to make sure only one goroutine can access a variable at a time to avoid conflicts?"),Object(a.b)("p",null,"This concept is called mutual exclusion, and the conventional name for the data structure that provides it is mutex."),Object(a.b)("p",null,"Go's standard library provides mutual exclusion with ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://golang.org/pkg/sync/#Mutex"}),Object(a.b)("inlineCode",{parentName:"a"},"sync.Mutex"))," and its two methods:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"Lock")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"Unlock"))),Object(a.b)("p",null,"We can define a block of code to be executed in mutual exclusion by surrounding it with a call to ",Object(a.b)("inlineCode",{parentName:"p"},"Lock")," and ",Object(a.b)("inlineCode",{parentName:"p"},"Unlock")," as shown on the ",Object(a.b)("inlineCode",{parentName:"p"},"Inc")," method."),Object(a.b)("p",null,"We can also use ",Object(a.b)("inlineCode",{parentName:"p"},"defer")," to ensure the mutex will be unlocked as in the ",Object(a.b)("inlineCode",{parentName:"p"},"Value")," method."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "fmt"\n    "sync"\n    "time"\n)\n\n// SafeCounter is safe to use concurrently.\ntype SafeCounter struct {\n    v   map[string]int\n    mux sync.Mutex\n}\n\n// Inc increments the counter for the given key.\nfunc (c *SafeCounter) Inc(key string) {\n    c.mux.Lock()\n    // Lock so only one goroutine at a time can access the map c.v.\n    c.v[key]++\n    c.mux.Unlock()\n}\n\n// Value returns the current value of the counter for the given key.\nfunc (c *SafeCounter) Value(key string) int {\n    c.mux.Lock()\n    // Lock so only one goroutine at a time can access the map c.v.\n    defer c.mux.Unlock()\n    return c.v[key]\n}\n\nfunc main() {\n    c := SafeCounter{v: make(map[string]int)}\n    for i := 0; i < 1000; i++ {\n        go c.Inc("somekey")\n    }\n\n    time.Sleep(time.Second)\n    fmt.Println(c.Value("somekey"))\n}\n')))}p.isMDXComponent=!0},274:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=p(t),b=r,f=m["".concat(c,".").concat(b)]||m[b]||s[b]||a;return t?o.a.createElement(f,i(i({ref:n},l),{},{components:t})):o.a.createElement(f,i({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=b;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=t[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);