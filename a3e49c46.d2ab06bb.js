(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{168:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var i=a(2),l=a(9),n=(a(0),a(185)),r={title:"SOEN 321"},b={id:"course/SOEN321",isDocsHomePage:!1,title:"SOEN 321",description:"SOEN 321 Winter 2019",source:"@site/docs/course/SOEN321.md",permalink:"/docs/course/SOEN321",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/course/SOEN321.md",sidebar:"courses",previous:{title:"This is Document Number 3",permalink:"/docs/course/doc3"},next:{title:"SOEN 321 Project",permalink:"/docs/course/SOEN321_Project"}},c=[{value:"Outline",id:"outline",children:[{value:"Final",id:"final",children:[]},{value:"Cheatsheet",id:"cheatsheet",children:[]}]},{value:"0. Preparation",id:"0-preparation",children:[{value:"0.1 Modulus",id:"01-modulus",children:[]},{value:"0.2 Pseudo-Random Number Generators (PRNG)",id:"02-pseudo-random-number-generators-prng",children:[]},{value:"0.3 Some Other Types of Security",id:"03-some-other-types-of-security",children:[]},{value:"0.4 Attack analysis",id:"04-attack-analysis",children:[]}]},{value:"1. Trusting trust",id:"1-trusting-trust",children:[{value:"1.1 Security stack",id:"11-security-stack",children:[]},{value:"1.2 Security v.s. Correctness",id:"12-security-vs-correctness",children:[]},{value:"1.3 What code to trust?",id:"13-what-code-to-trust",children:[]},{value:"1.4 Examples",id:"14-examples",children:[]},{value:"1.5 Security Mindset",id:"15-security-mindset",children:[]}]},{value:"2. Cryptography",id:"2-cryptography",children:[{value:"2.1 What Cryptography is",id:"21-what-cryptography-is",children:[]},{value:"2.2 What Cryptography for",id:"22-what-cryptography-for",children:[]},{value:"2.3 Cryptology",id:"23-cryptology",children:[]},{value:"2.4 Basic tools of cryptography: Security Primitives",id:"24-basic-tools-of-cryptography-security-primitives",children:[]},{value:"2.5 Attacker model",id:"25-attacker-model",children:[]},{value:"2.6 Encryption",id:"26-encryption",children:[]},{value:"2.7 Examples",id:"27-examples",children:[]},{value:"2.8 How to attack encryption",id:"28-how-to-attack-encryption",children:[]}]},{value:"3. Stream ciphers",id:"3-stream-ciphers",children:[{value:"3.1 Vernam Cipher",id:"31-vernam-cipher",children:[]},{value:"3.2 One-time pad",id:"32-one-time-pad",children:[]},{value:"3.3 RC4",id:"33-rc4",children:[]},{value:"3.4 ChaCha20 stream cipher",id:"34-chacha20-stream-cipher",children:[]}]},{value:"4. Block ciphers (symmetric key)",id:"4-block-ciphers-symmetric-key",children:[{value:"4.1 Electronic Codebook (ECB)",id:"41-electronic-codebook-ecb",children:[]},{value:"4.2 Cipher Block Chaining (CBC)",id:"42-cipher-block-chaining-cbc",children:[]},{value:"4.3 Counter mode (CTR)",id:"43-counter-mode-ctr",children:[]},{value:"4.4 XTS-AES",id:"44-xts-aes",children:[]},{value:"4.5 ECB-CTS",id:"45-ecb-cts",children:[]},{value:"4.6 Block cipher: design components",id:"46-block-cipher-design-components",children:[]},{value:"4.7 Data Encryption Standard (DES)",id:"47-data-encryption-standard-des",children:[]},{value:"4.8 Advanced Encryptioin Standard (AES)",id:"48-advanced-encryptioin-standard-aes",children:[]}]},{value:"5. Hash Functions",id:"5-hash-functions",children:[{value:"5.1 What it is",id:"51-what-it-is",children:[]},{value:"5.2 Classification",id:"52-classification",children:[]},{value:"5.3 How to build a hash function",id:"53-how-to-build-a-hash-function",children:[]},{value:"5.4 General structure of iterated Hash Functions",id:"54-general-structure-of-iterated-hash-functions",children:[]},{value:"5.5 Hash functions based on block ciphers",id:"55-hash-functions-based-on-block-ciphers",children:[]},{value:"5.6 Applications",id:"56-applications",children:[]},{value:"5.7 Pre-computation attacks (Rainbow-table hash-chain attacks)",id:"57-pre-computation-attacks-rainbow-table-hash-chain-attacks",children:[]}]},{value:"6. Message Authentication Code (MAC)",id:"6-message-authentication-code-mac",children:[{value:"6.1 What it is",id:"61-what-it-is",children:[]},{value:"6.2 MDC vs MAC",id:"62-mdc-vs-mac",children:[]},{value:"6.3 Hash-based MAC",id:"63-hash-based-mac",children:[]},{value:"6.4 MAC from block ciphers: CBC MAC",id:"64-mac-from-block-ciphers-cbc-mac",children:[]},{value:"6.5 Password-Based Key Derivation Function (PBKDF2)",id:"65-password-based-key-derivation-function-pbkdf2",children:[]}]},{value:"7. Public Key Cryptography and SSL",id:"7-public-key-cryptography-and-ssl",children:[{value:"7.1 Overview",id:"71-overview",children:[]},{value:"7.2 Public Key Cryptography",id:"72-public-key-cryptography",children:[]},{value:"7.3 Public Key Encryption",id:"73-public-key-encryption",children:[]},{value:"7.4 Public Key Signatures",id:"74-public-key-signatures",children:[]},{value:"7.5 Diffie-Hellman Key Exchange (D-H Key Exchange)",id:"75-diffie-hellman-key-exchange-d-h-key-exchange",children:[]},{value:"7.6 Password Authenticated Key Exchange",id:"76-password-authenticated-key-exchange",children:[]},{value:"7.7 RSA",id:"77-rsa",children:[]},{value:"7.8 RSA Encryption",id:"78-rsa-encryption",children:[]},{value:"7.9 Digital Signature",id:"79-digital-signature",children:[]},{value:"7.10 RSA Signature",id:"710-rsa-signature",children:[]},{value:"7.11 SSL",id:"711-ssl",children:[]}]},{value:"8.  Usability and human factors in security",id:"8--usability-and-human-factors-in-security",children:[{value:"8.1 Pretty Good Privacy (PGP)",id:"81-pretty-good-privacy-pgp",children:[]},{value:"8.2 Human as an attack vector",id:"82-human-as-an-attack-vector",children:[]},{value:"8.3 Phishing",id:"83-phishing",children:[]},{value:"8.4 The RSA SecureId Hack (Hardware authentication token)",id:"84-the-rsa-secureid-hack-hardware-authentication-token",children:[]},{value:"8.5 Deception",id:"85-deception",children:[]}]},{value:"9. Botnets and DDoS",id:"9-botnets-and-ddos",children:[{value:"9.1 Botnets",id:"91-botnets",children:[]},{value:"9.2 DDos attacks",id:"92-ddos-attacks",children:[]},{value:"9.3 DDos Attack methods",id:"93-ddos-attack-methods",children:[]},{value:"9.4 Mirai attack",id:"94-mirai-attack",children:[]}]},{value:"13. Domain Fronting",id:"13-domain-fronting",children:[{value:"What",id:"what",children:[]},{value:"Techniques",id:"techniques",children:[]}]},{value:"14. Write Protection Against Privileged Data Tampering",id:"14-write-protection-against-privileged-data-tampering",children:[{value:"14.1 Legacy solutions",id:"141-legacy-solutions",children:[]},{value:"14.2 Academic proposals",id:"142-academic-proposals",children:[]},{value:"14.3 FlashGuard",id:"143-flashguard",children:[]},{value:"14.4 Data loss prevention",id:"144-data-loss-prevention",children:[]}]},{value:"Tutorial 9 - RSA/AES encryption with OpenSSL",id:"tutorial-9---rsaaes-encryption-with-openssl",children:[{value:"Public key crypto",id:"public-key-crypto",children:[]},{value:"RSA encryption/decryption with OpenSSL",id:"rsa-encryptiondecryption-with-openssl",children:[]},{value:"AES encryption/decryption with OpenSSL",id:"aes-encryptiondecryption-with-openssl",children:[]}]}],o={rightToc:c};function p(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(n.b)("wrapper",Object(i.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"SOEN 321 Winter 2019"),Object(n.b)("h2",{id:"outline"},"Outline"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Instructor: ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://users.encs.concordia.ca/~mmannan/"}),"Dr. Mohammad Mannan")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://moodle.concordia.ca/moodle/pluginfile.php/3413380/course/section/1071618/Winter2019-outline-SOEN321.pdf"}),"Outline"))),Object(n.b)("h3",{id:"final"},"Final"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Set 3: Stream cipher"),Object(n.b)("li",{parentName:"ul"},"Set 4: Block cipher"),Object(n.b)("li",{parentName:"ul"},"Set 5: Hash"),Object(n.b)("li",{parentName:"ul"},"Set 6: MAC"),Object(n.b)("li",{parentName:"ul"},"Set 7: PKI-SSL"),Object(n.b)("li",{parentName:"ul"},"Set 8: Usability"),Object(n.b)("li",{parentName:"ul"},"Set 9: Botnets-DDos"),Object(n.b)("li",{parentName:"ul"},"Set 14: Inuksuk")),Object(n.b)("h3",{id:"cheatsheet"},"Cheatsheet"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(i.a)({parentName:"tr"},{align:null}),"Name","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0"),Object(n.b)("th",Object(i.a)({parentName:"tr"},{align:"left"}),"Block size","\xa0","\xa0","\xa0","\xa0","\xa0"),Object(n.b)("th",Object(i.a)({parentName:"tr"},{align:"left"}),"Key size","\xa0","\xa0","\xa0","\xa0","\xa0"),Object(n.b)("th",Object(i.a)({parentName:"tr"},{align:"left"}),"Output size","\xa0","\xa0","\xa0","\xa0","\xa0"),Object(n.b)("th",Object(i.a)({parentName:"tr"},{align:"left"}),"Rounds","\xa0","\xa0","\xa0","\xa0","\xa0"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"DES"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"64"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"56"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"16")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"AES-128"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"128"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"128"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"10")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"AES-192"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"128"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"192"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"12")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"AES-256"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"128"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"256"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"14")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"SHA1"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"160"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"SHA2-256"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"})),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}),"256"),Object(n.b)("td",Object(i.a)({parentName:"tr"},{align:"left"}))))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"0-preparation"},"0. Preparation"),Object(n.b)("h3",{id:"01-modulus"},"0.1 Modulus"),Object(n.b)("p",null,"$a\\equiv b\\pmod n$"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"implies: $n$ divides $(a-b)$"),Object(n.b)("li",{parentName:"ul"},"implies: $a\\pmod n = b\\pmod n$"),Object(n.b)("li",{parentName:"ul"},"e.g.: $7\\equiv 4\\pmod 3$, $-11\\equiv 17\\pmod 7$")),Object(n.b)("h3",{id:"02-pseudo-random-number-generators-prng"},"0.2 Pseudo-Random Number Generators (PRNG)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Definition",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"A given PRNG is a deterministic function that takes a fixed-length key (seed) and produces anunbounded bit stream."))),Object(n.b)("li",{parentName:"ul"},"Same seed (entropy source), same sequence",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Hardware vs. Software sources"),Object(n.b)("li",{parentName:"ul"},"Sound/video input, disk drives"),Object(n.b)("li",{parentName:"ul"},"Elapsed time between emission of particles during radioactive decay"),Object(n.b)("li",{parentName:"ul"},"Linux (/dev/random)"),Object(n.b)("li",{parentName:"ul"},"Mouse, keyboard activities"),Object(n.b)("li",{parentName:"ul"},"Disk I/O"),Object(n.b)("li",{parentName:"ul"},"Interrupts"),Object(n.b)("li",{parentName:"ul"},"Embedded devices / IoTs"),Object(n.b)("li",{parentName:"ul"},"CPU support"),Object(n.b)("li",{parentName:"ul"},"Online service (should note be trusted)"))),Object(n.b)("li",{parentName:"ul"},"Produces \u201cstatistically random\u201d numbers",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"it passes standard tests for randomness"))),Object(n.b)("li",{parentName:"ul"},"Cryptographically secure, if",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Unpredictable (next-bit test): computationally infeasible to predict the next bit given a complete history of past bits."),Object(n.b)("li",{parentName:"ul"},"Balanced: The number of $1$\u2019s and $0$\u2019s should be equal.")))),Object(n.b)("h3",{id:"03-some-other-types-of-security"},"0.3 Some Other Types of Security"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Unconditional security:"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"The uncertainty in the plaintext, after observing the ciphertext, must be equal to the a priori uncertainty about the plaintext. Observation of the ciphertext provides no information to an adversary."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Computational security:"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"level of computation required to defeat it (using best attack known) >> the computational resources of the adversary."),Object(n.b)("li",{parentName:"ul"},"Data complexity is $2^n$: $n$ is the block size."),Object(n.b)("li",{parentName:"ul"},"Processing complexity is $2^k$: $k$ is the key size.")))),Object(n.b)("h3",{id:"04-attack-analysis"},"0.4 Attack analysis"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Complexity of an attack",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Data complexity\u2013 expected number of required input data units (ciphertext blocks).",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"For a block of size $n$, it is $2^n$."))),Object(n.b)("li",{parentName:"ol"},"Storage complexity \u2013 expected number of required storage units.."),Object(n.b)("li",{parentName:"ol"},"Processing complexity \u2013 expected number of required operations on data.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"For a key of size $k$, it is $2^k$."))))),Object(n.b)("li",{parentName:"ul"},"How to reduce complexity",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"possible parallelization")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"1-trusting-trust"},"1. Trusting trust"),Object(n.b)("h3",{id:"11-security-stack"},"1.1 Security stack"),Object(n.b)("p",null,"![Security Stack]","({{ site.baseurl }}/assets/resources/SOEN321/Security_Stack.png)"),Object(n.b)("h3",{id:"12-security-vs-correctness"},"1.2 Security v.s. Correctness"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"System security: System properties preserved in the face of an attack."),Object(n.b)("li",{parentName:"ul"},"System correctness: For reasonable input, get reasonable output.")),Object(n.b)("h3",{id:"13-what-code-to-trust"},"1.3 What code to trust?"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Is Windows/OSX binary reliable?"),Object(n.b)("li",{parentName:"ol"},"No. So we use open-source, or wirte our own."),Object(n.b)("li",{parentName:"ol"},"But we need to compile. "),Object(n.b)("li",{parentName:"ol"},"Who wrote the compiler?"),Object(n.b)("li",{parentName:"ol"},"So inspect the source code of the compiler, and recompiler the compiler."),Object(n.b)("li",{parentName:"ol"},"But there is another compiler.",Object(n.b)("blockquote",{parentName:"li"},Object(n.b)("p",{parentName:"blockquote"},'"The moral is obvious. You can\'t trust code that you did not totally create yourself."')))),Object(n.b)("h3",{id:"14-examples"},"1.4 Examples"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"The Bullrun project"),Object(n.b)("li",{parentName:"ul"},"The PRISM Program")),Object(n.b)("h3",{id:"15-security-mindset"},"1.5 Security Mindset"),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"\u201cThink like an attacker, but do not attack.\u201d")),Object(n.b)("hr",null),Object(n.b)("h2",{id:"2-cryptography"},"2. Cryptography"),Object(n.b)("p",null,"Cryptography $\\neq$ Security"),Object(n.b)("h3",{id:"21-what-cryptography-is"},"2.1 What Cryptography is"),Object(n.b)("p",null,"Cryptography is the study of ",Object(n.b)("em",{parentName:"p"},"mathematical techniques")," related to aspects of information security such as confidentiality, data integrity, entity authentication, and data origin authentication."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Always think from three perspectives",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Defenders' view point"),Object(n.b)("li",{parentName:"ol"},"Attackers' view point"),Object(n.b)("li",{parentName:"ol"},"How much it will cost \u2013 to protect & to attack")))),Object(n.b)("h3",{id:"22-what-cryptography-for"},"2.2 What Cryptography for"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("strong",{parentName:"li"},"Confidentiality"),": prevent others from reading a message"),Object(n.b)("li",{parentName:"ol"},Object(n.b)("strong",{parentName:"li"},"Integrity"),": someone didn\u2019t replace or modify a message"),Object(n.b)("li",{parentName:"ol"},"Data origin authentication: a message originated from a certain source"),Object(n.b)("li",{parentName:"ol"},"Entity authentication: a person is who he/she claims to be. e.g.: password"),Object(n.b)("li",{parentName:"ol"},"Non-repudiation: prevent someone from denying past commitments or actions; that is, someone cannot deny the validity of something.")),Object(n.b)("h3",{id:"23-cryptology"},"2.3 Cryptology"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Cryptology = Cryptography + Cryptanalysis"),Object(n.b)("li",{parentName:"ul"},"Cryptanalysis: Study of code breaking")),Object(n.b)("h3",{id:"24-basic-tools-of-cryptography-security-primitives"},"2.4 Basic tools of cryptography: Security Primitives"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Unkeyed Primitives",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Hash functions"),Object(n.b)("li",{parentName:"ul"},"One-way permutations"),Object(n.b)("li",{parentName:"ul"},"Random sequences"))),Object(n.b)("li",{parentName:"ol"},"Symmetric-key Primitives",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Symmetric-key ciphers",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Block ciphers"),Object(n.b)("li",{parentName:"ul"},"Stream ciphers"))),Object(n.b)("li",{parentName:"ul"},"Message Authentications Codes (MACs)"),Object(n.b)("li",{parentName:"ul"},"Signatures"),Object(n.b)("li",{parentName:"ul"},"Pseudorandom sequences"),Object(n.b)("li",{parentName:"ul"},"Identification primitives"))),Object(n.b)("li",{parentName:"ol"},"Public-key Primitives",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Public-key ciphers"),Object(n.b)("li",{parentName:"ul"},"Signatures"),Object(n.b)("li",{parentName:"ul"},"Identification primitives")))),Object(n.b)("h3",{id:"25-attacker-model"},"2.5 Attacker model"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Passive vs. active attacker"),Object(n.b)("li",{parentName:"ol"},"What computational resources the attacker has?"),Object(n.b)("li",{parentName:"ol"},"What does the attacker know about a system?"),Object(n.b)("li",{parentName:"ol"},"What are the assumptions?",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"encryption keys are shared via a secure channel")))),Object(n.b)("h3",{id:"26-encryption"},"2.6 Encryption"),Object(n.b)("p",null,"![Encryption Model]","({{ site.baseurl }}/assets/resources/SOEN321/Encryption_Model.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Goals",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Data confidentiality"),Object(n.b)("li",{parentName:"ol"},'Protect a large amount of data with "short" secrets, like a lock-and-key.'),Object(n.b)("li",{parentName:"ol"},"Make it ",Object(n.b)("em",{parentName:"li"},"difficult")," for those without the secret key; efficient retrieval with the correct key."))),Object(n.b)("li",{parentName:"ul"},"Simple model",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"What to hide: key + plaintext"))),Object(n.b)("li",{parentName:"ul"},"Terminologies",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"plaintext - the original message, denoted $m$ or $p$"),Object(n.b)("li",{parentName:"ol"},"ciphertext - the encoded message, denoted $c$"),Object(n.b)("li",{parentName:"ol"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"cipher"))," - algorithms for transforming plaintext to ciphertext and vice-versa"),Object(n.b)("li",{parentName:"ol"},"key - info used in cipher known only to sender/receiver"),Object(n.b)("li",{parentName:"ol"},"encipher (encrypt) - converting plaintext to ciphertext, denoted $E()$"),Object(n.b)("li",{parentName:"ol"},"decipher (decrypt) - recovering ciphertext from plaintext, denoted $D()$"),Object(n.b)("li",{parentName:"ol"},"substitution \u2013 each element is mapped into another"),Object(n.b)("li",{parentName:"ol"},"transposition \u2013 rearrangement of elements"))),Object(n.b)("li",{parentName:"ul"},"Kerckhoff\u2019s Principle",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Security should depend only on the key",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Don\u2019t assume enemy won\u2019t know algorithm"),Object(n.b)("li",{parentName:"ul"},"Can capture machines, disassemble programs"),Object(n.b)("li",{parentName:"ul"},"Too expensive to invent new algorithm if it is compromised"))),Object(n.b)("li",{parentName:"ul"},"Security by obscurity does not work"))),Object(n.b)("li",{parentName:"ul"},"History",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Classical ciphers",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Pen & paper, simple mechanical machines"),Object(n.b)("li",{parentName:"ul"},"Egyptians, Greeks, Romans, Hebrew scholars"))),Object(n.b)("li",{parentName:"ul"},"World War I",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Vernam Cipher (one time pad)"))),Object(n.b)("li",{parentName:"ul"},"World War II",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Complex electro-mechanical machines"),Object(n.b)("li",{parentName:"ul"},"Enigma"))),Object(n.b)("li",{parentName:"ul"},"Modern crypto",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Depends on \u2013 computers, math"),Object(n.b)("li",{parentName:"ul"},"Data Encryption Standard (DES) \u2013 1975"),Object(n.b)("li",{parentName:"ul"},"Public key systems \u2013 1976"),Object(n.b)("li",{parentName:"ul"},"Common people use")))))),Object(n.b)("h3",{id:"27-examples"},"2.7 Examples"),Object(n.b)("h4",{id:"1-substitution-ciphers"},"1. Substitution ciphers"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Each symbol in plaintext is replaced by another symbol according to some fixed permutation",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"e.g.: Repalce $A$ by $D$, $B$ by $G$."))),Object(n.b)("li",{parentName:"ul"},"For a set of English characters, all possible mappings is $26!$."),Object(n.b)("li",{parentName:"ul"},"But such a large key space does not mean it is secure (why? Pattern)."))),Object(n.b)("li",{parentName:"ul"},"Substitution is said to add confusion (makes relationship between key and ciphertext as complex as possible)"),Object(n.b)("li",{parentName:"ul"},"Break it: Brute force key search",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"English letter frequencies")))),Object(n.b)("h5",{id:"shiftcaesar-cipher"},"Shift/Caesar cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"It is one type of simple substitution cipher."),Object(n.b)("li",{parentName:"ul"},"Shift each letter by an offset."),Object(n.b)("li",{parentName:"ul"},"For a set of English characters, all possible mappings is $25$."))),Object(n.b)("li",{parentName:"ul"},"Break it: Brute force",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Only $25$ keys")))),Object(n.b)("p",null,"![Shift Cipher]","({{ site.baseurl }}/assets/resources/SOEN321/Shift_Cipher.png)"),Object(n.b)("h5",{id:"polyalphabetic-substitution"},"Polyalphabetic substitution"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Multiple substitution alphabets",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Vigen\xe8re cipher"),Object(n.b)("li",{parentName:"ul"},"Enigma"))),Object(n.b)("li",{parentName:"ul"},"Pick a keyword, repeat it to mapping plaintext."),Object(n.b)("li",{parentName:"ul"},"Lookup in the table using the keyword letter and its conresponding plaintext letter."))),Object(n.b)("li",{parentName:"ul"},"Transposition is said to add diffusion (spreading out bits so redundancy in plaintext is spread over ciphertext), so more resistant to frequency analysis."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"http://pi.math.cornell.edu/~mec/2003-2004/cryptography/polyalpha/polyalpha.html"}),"Break it"))),Object(n.b)("h5",{id:"transposition-cipher"},"Transposition cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"With a fixed period $t$,"),Object(n.b)("li",{parentName:"ul"},"grouping the plaintext into blocks of $t$ characters,"),Object(n.b)("li",{parentName:"ul"},"applying to each block a single permutation $e$ on the numbers $1$ to $t$."))),Object(n.b)("li",{parentName:"ul"},"e.g.: $t=6$",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$m=CAESAR$"),Object(n.b)("li",{parentName:"ul"},"$e=(6\\ 4\\ 1\\ 3\\ 5\\ 2)$"),Object(n.b)("li",{parentName:"ul"},"$c=RSCEAA$"),Object(n.b)("li",{parentName:"ul"},"$d=(3\\ 6\\ 4\\ 2\\ 5\\ 1)$")))),Object(n.b)("h4",{id:"2-block--stream-ciphers"},"2. Block & stream ciphers"),Object(n.b)("h5",{id:"block-cipher"},"Block cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"plaintext message is broken into fixed-length blocks before encryption"),Object(n.b)("li",{parentName:"ul"},"one block is processed at a time"),Object(n.b)("li",{parentName:"ul"},"most modern ciphers are block ciphers")),Object(n.b)("h5",{id:"stream-cipher"},"Stream cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"block length is one "),Object(n.b)("li",{parentName:"ul"},"requires only limited buffering of data")),Object(n.b)("h3",{id:"28-how-to-attack-encryption"},"2.8 How to attack encryption"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Cryptanalysis",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Search for weaknesses in the algorithms"),Object(n.b)("li",{parentName:"ul"},"(Partial) knowledge about plaintext, ciphertext"))),Object(n.b)("li",{parentName:"ol"},"Brute-force",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Try all possible keys ($N$)"),Object(n.b)("li",{parentName:"ul"},"On average $N/2$ trails are required"))),Object(n.b)("li",{parentName:"ol"},"Malware, key/screenlogger, physical and side-channel attacks...")),Object(n.b)("h4",{id:"attacks-on-encryption-schemes"},"Attacks on encryption schemes"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Ciphertext-only attack - deduce the decryption key or plaintext by only observing ciphertext"),Object(n.b)("li",{parentName:"ol"},"Known-plaintext attack - using a quantity of plaintext and corresponding ciphertext"),Object(n.b)("li",{parentName:"ol"},"Chosen-plaintext attack - choose plaintext and is then given corresponding ciphertext"),Object(n.b)("li",{parentName:"ol"},"Adaptive chosen-plaintext attack - chosen-plaintext attack where the choice of plaintext may depend on the ciphertext received from previous requests"),Object(n.b)("li",{parentName:"ol"},"Chosen-ciphertext attack - select the ciphertext, then the corresponding plaintext is given"),Object(n.b)("li",{parentName:"ol"},"Adaptive chosen-ciphertext attack - chosenciphertext attack where the choice of ciphertext may\ndepend on the plaintext received from previous requests")),Object(n.b)("hr",null),Object(n.b)("h2",{id:"3-stream-ciphers"},"3. Stream ciphers"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Synchronous stream ciphers",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Key-stream is generated ",Object(n.b)("em",{parentName:"li"},Object(n.b)("strong",{parentName:"em"},"independently"))," of plaintext and of ciphertext"))),Object(n.b)("li",{parentName:"ul"},"Self-synchronizing stream ciphers",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Key-stream is generated as a function of the key and a fixed number of ",Object(n.b)("em",{parentName:"li"},Object(n.b)("strong",{parentName:"em"},"previous"))," ciphertext digits"))),Object(n.b)("li",{parentName:"ul"},"Examples:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Vernam cipher"),Object(n.b)("li",{parentName:"ul"},"One-time pad"),Object(n.b)("li",{parentName:"ul"},"RC4"),Object(n.b)("li",{parentName:"ul"},"ChaCha20")))),Object(n.b)("h3",{id:"31-vernam-cipher"},"3.1 Vernam Cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Plaintext: $m_1m_2\\ldots m_t$"),Object(n.b)("li",{parentName:"ul"},"Key string: $k_1k_2\\ldots k_t$"),Object(n.b)("li",{parentName:"ul"},"Cipertext: $c_1c_2\\ldots c_t$"),Object(n.b)("li",{parentName:"ul"},"$c_i=m_i\\oplus k_i, 1\\leq i\\leq t$")))),Object(n.b)("p",null,"![Vernam Cipher]","({{ site.baseurl }}/assets/resources/SOEN321/Vernam_Cipher.png)"),Object(n.b)("h3",{id:"32-one-time-pad"},"3.2 One-time pad"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Why we need it"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Vernam cipher ",Object(n.b)("em",{parentName:"li"},'"can"')," use any bit source as a keystream, "),Object(n.b)("li",{parentName:"ul"},"But for real security the key should be ",Object(n.b)("em",{parentName:"li"},Object(n.b)("strong",{parentName:"em"},"random and never use again")),"."),Object(n.b)("li",{parentName:"ul"},"Vernam cipher with such a key-stream is called a one-time pad."),Object(n.b)("li",{parentName:"ul"},"The one-time pad is provably secure."),Object(n.b)("li",{parentName:"ul"},"One-time pad is unconditionally secure against a ciphertext-only attack, observation of the ciphertext provides no information to an adversary."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How it works"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Same as vernam cipher"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"What if"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Reuse the key-steam"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"If ciphertexts and one plaintext are known."),Object(n.b)("p",{parentName:"li"}," $$\n\\begin{align",Object(n.b)("em",{parentName:"p"},"}\n&\\text{Ciphertext}_1\\oplus\\text{Ciphertext}_2","\\","\n=\\ &\\text{Plaintext}_1\\oplus\\text{key}\\oplus\\text{Plaintext}_2\\oplus\\text{key}","\\","\n=\\ &\\text{Plaintext}_1\\oplus\\text{Plaintext}_2\n\\end{align"),"}\n$$ ")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Not random"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Brute-force"))))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Probability of $0$ and $1$ in ciphertext"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"In the plaintext, assume the probability $p(0)=x$, then $p(1)=1-x$."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"Assume")," the probability of a key bit $p(0)=p(1)=1/2$."),Object(n.b)("li",{parentName:"ul"},"Four cases:")),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"$p(m_i=0,k_i=0)=x\\cdot 1/2=x/2$"),Object(n.b)("li",{parentName:"ol"},"$p(m_i=0,k_i=1)=x\\cdot 1/2=x/2$"),Object(n.b)("li",{parentName:"ol"},"$p(m_i=1,k_i=0)=(1-x)\\cdot 1/2=(1-x)/2$"),Object(n.b)("li",{parentName:"ol"},"$p(m_i=1,k_i=1)=(1-x)\\cdot 1/2=(1-x)/2$")),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"So:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$p(c_i=0)=p(c_i=1)=x/2+(1-x)/2=1/2$"))),Object(n.b)("li",{parentName:"ul"},"But:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"No integrity")))))),Object(n.b)("h3",{id:"33-rc4"},"3.3 RC4"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"What it is",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Byte-oriented, fast in software"),Object(n.b)("li",{parentName:"ul"},"Variable-length key: 40 \u2013 2048 bits"),Object(n.b)("li",{parentName:"ul"},"Similar to the one-time pad except that generated pseudorandom bits, rather than a prepared stream, are used."))),Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Initialization: the permutation $S$ is initialized with a variable length key."),Object(n.b)("li",{parentName:"ul"},"Keystream: the stream of bits is generated using $S$ and two 8-bit index-pointers (denoted $i$ and $j$)."),Object(n.b)("li",{parentName:"ul"},"$\\oplus$, same as one-time pad.")))),Object(n.b)("h3",{id:"34-chacha20-stream-cipher"},"3.4 ChaCha20 stream cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"What it is",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"256-bit key"),Object(n.b)("li",{parentName:"ul"},"96-bit nonce"),Object(n.b)("li",{parentName:"ul"},"32-bit block counter"))),Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Output a 64-byte block of key stream and increments block counter in each invocation",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$k=\\text{ chacha_stream(key, nonce, counter)}$"))),Object(n.b)("li",{parentName:"ul"},"$c_i = m_i \\oplus k_i$"),Object(n.b)("li",{parentName:"ul"},"If never use the same nonce with the same key twice, it is a one time pad.")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"4-block-ciphers-symmetric-key"},"4. Block ciphers (symmetric key)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"What it is",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"A function that maps $n$-bit plaintext blocks to $n$-bit (blocklength) ciphertext blocks."),Object(n.b)("li",{parentName:"ul"},"If key $K$ is $k$ bits long, the number of keys is $2^k$."),Object(n.b)("li",{parentName:"ul"},"Encryption: $C = E(M,K)$"),Object(n.b)("li",{parentName:"ul"},"Decryption: $M = D(C,K)$"),Object(n.b)("li",{parentName:"ul"},"The encryption function $E_k$ must be one-to-one (bijection).",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"One-to-one: Because the encryption and decryption process must be reversed."),Object(n.b)("li",{parentName:"ul"},"Not onto: Some $c_i$s have no correspoing $m_i$s, so if a bit flip occurs, decryption would fail."),Object(n.b)("li",{parentName:"ul"},"Not one-to-one: Ambiguity, $c_i$ maps more than one $m_i$.")))))),Object(n.b)("p",null,"![Bijection]","({{ site.baseurl }}/assets/resources/SOEN321/Bijection.png)\n","![Non Bijection]","({{ site.baseurl }}/assets/resources/SOEN321/Bijection_Non.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Used for",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Data confidentiality"),Object(n.b)("li",{parentName:"ol"},"MACs"),Object(n.b)("li",{parentName:"ol"},"PRNGs (pseudorandom number generators)"),Object(n.b)("li",{parentName:"ol"},"Authentication"))),Object(n.b)("li",{parentName:"ul"},"Very efficient software and hardware implementations",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Can be used in low-resource devices"))),Object(n.b)("li",{parentName:"ul"},"Practical security",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Standard assumptions (in addition to Kerckhoff's):",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"attacker has access to all transmitted ciphertext."))),Object(n.b)("li",{parentName:"ul"},"A block cipher is:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"totally broken"))," if key is recoverable, and"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"partially broken"))," if (some) plaintext is recoverable (without a key)"))))),Object(n.b)("li",{parentName:"ul"},"Modes of operation",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"How to employ block ciphers for large messages",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Dividing messages"),Object(n.b)("li",{parentName:"ol"},"Padding the last block"))),Object(n.b)("li",{parentName:"ul"},"Basic modes",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"ECB: Electronic Code Book"),Object(n.b)("li",{parentName:"ul"},"CBC: Cipher Block Chaining"),Object(n.b)("li",{parentName:"ul"},"OFB"),Object(n.b)("li",{parentName:"ul"},"CFB"))),Object(n.b)("li",{parentName:"ul"},"Initialization Vector (IV)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"A block of data used in addition to the input message"),Object(n.b)("li",{parentName:"ul"},"Randomize the encryption process")))))),Object(n.b)("h3",{id:"41-electronic-codebook-ecb"},"4.1 Electronic Codebook (ECB)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Overview",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Same plaintext result in identical ciphertext"),Object(n.b)("li",{parentName:"ul"},"Blocks are enciphered independently of other blocks"),Object(n.b)("li",{parentName:"ul"},"Bit errors in a single ciphertext affect decipherment of that block ",Object(n.b)("em",{parentName:"li"},Object(n.b)("strong",{parentName:"em"},"only"))))),Object(n.b)("li",{parentName:"ul"},"How to",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$c_j=E_k(x_j)$"),Object(n.b)("li",{parentName:"ul"},"$x_j=E^{-1}(c_j)$")))),Object(n.b)("p",null,"![ECB]","({{ site.baseurl }}/assets/resources/SOEN321/ECB.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Weakness",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Does not hide data patterns"),Object(n.b)("li",{parentName:"ul"},"Malicious substition of ciphertext is possible")))),Object(n.b)("p",null,"![ECB_pattern]","({{ site.baseurl }}/assets/resources/SOEN321/ECB_pattern.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Usage",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"When can we use this mode:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Plaintext that has size of less than one block, to avoid pattern"))),Object(n.b)("li",{parentName:"ul"},"When not to use it:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Multi-block messages"),Object(n.b)("li",{parentName:"ul"},"Key are reused more than a single block")))))),Object(n.b)("h3",{id:"42-cipher-block-chaining-cbc"},"4.2 Cipher Block Chaining (CBC)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Overview"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Chaining causes ciphertext $c_j$ to depend on all preceding plaintext"),Object(n.b)("li",{parentName:"ul"},"Random access to encrypted data is not possible because of the previous reason."),Object(n.b)("li",{parentName:"ul"},"Also because of that, only the ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"same key, IV, plaintext"))," results identical ciphertext."),Object(n.b)("li",{parentName:"ul"},"IV must be ",Object(n.b)("em",{parentName:"li"},Object(n.b)("strong",{parentName:"em"},"integrity")),"-proteced",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"If not, attackers may make predictable bit changes to the 1st block."),Object(n.b)("li",{parentName:"ul"},"If your salary is saved as $0111010$, you can flip the $0$ in IV corresponding to $0$ in your salary to change your salary to $1111111$."))),Object(n.b)("li",{parentName:"ul"},"A single bit error in $c",Object(n.b)("em",{parentName:"li"},"j$ affects decryption of blocks $c_j, c"),"{j+1}$."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$c",Object(n.b)("em",{parentName:"li"},"j=E_k(c"),"{j-1}\\oplus x_j)$ for $j\\geq 1$, $c_0=IV$"),Object(n.b)("li",{parentName:"ul"},"$x",Object(n.b)("em",{parentName:"li"},"j=c"),"{j-1}\\oplus E^{-1}(c_j)$ for $j\\geq 1$, $c_0=IV$")))),Object(n.b)("p",null,"![CBC]","({{ site.baseurl }}/assets/resources/SOEN321/CBC.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Weakness",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Has known weaknesses?")))),Object(n.b)("h3",{id:"43-counter-mode-ctr"},"4.3 Counter mode (CTR)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Overview"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"CTR must be different for each block"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Counter_(CTR)"}),"An IV/nonce value is also used with the counter for uniqueness (concat/addition/xor) ")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Advantage:"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Software and hardware efficiency: different blocks can be encrypted in parallel"),Object(n.b)("li",{parentName:"ol"},"Preprocessing: the encryption part can be done offline and when the message is known, just do the XOR."),Object(n.b)("li",{parentName:"ol"},"Random access: decryption of a block can be done in random order, very useful for hard-disk encryption."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to"))),Object(n.b)("p",null,"![CTR]","({{ site.baseurl }}/assets/resources/SOEN321/CTR.png)"),Object(n.b)("h3",{id:"44-xts-aes"},"4.4 XTS-AES"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"XEX (xor-encrypt-xor): efficient processing of consecutive blocks within a data unit."),Object(n.b)("li",{parentName:"ul"},"CTS (CipherText Stealing): provides support for sectors with size not divisible by block size."),Object(n.b)("li",{parentName:"ul"},"XTS: XEX-based Tweaked CodeBook mode (TCB) with CipherText Stealing (CTS).")),Object(n.b)("h3",{id:"45-ecb-cts"},"4.5 ECB-CTS"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How to")),Object(n.b)("p",null,"![CTS]","({{ site.baseurl }}/assets/resources/SOEN321/CTS.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Why //TODO")),Object(n.b)("h3",{id:"46-block-cipher-design-components"},"4.6 Block cipher: design components"),Object(n.b)("h4",{id:"avalanche-effect"},"Avalanche effect"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Slight change in input (e.g., flipping a single bit) significantly changes the output (e.g., half the output bits are flipped)"),Object(n.b)("li",{parentName:"ul"},"Strongly desired property of:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Block ciphers"),Object(n.b)("li",{parentName:"ul"},"Cryptographic hash functions")))),Object(n.b)("h4",{id:"product-cipher"},"Product cipher"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Execution of two or more simple ciphers in sequence (round of operations), such that the final product is cryptographically stronger than its components"),Object(n.b)("li",{parentName:"ul"},"In particular, alternating substitutions and transpositions")),Object(n.b)("h4",{id:"block-cipher-design-approaches"},"Block cipher design approaches"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"A round function is used",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Strong avalanche effect"),Object(n.b)("li",{parentName:"ul"},"Bijective"))),Object(n.b)("li",{parentName:"ul"},"Repeated multiple times ($n$ rounds)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Round $1$ input: plaintext block"),Object(n.b)("li",{parentName:"ul"},"Round $n$ output: ciphertext block"),Object(n.b)("li",{parentName:"ul"},"Round key: derived fromthe key $K$, for each round"))),Object(n.b)("li",{parentName:"ul"},"Examples",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"SP networks (used in AES, CAST-128)"),Object(n.b)("li",{parentName:"ul"},"Feistel structures (used in DES, RC5, Blowfish)")))),Object(n.b)("h4",{id:"substitution-permutation-sp-network"},"Substitution-permutation (SP) network"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How to")),Object(n.b)("p",null,"![SP]","({{ site.baseurl }}/assets/resources/SOEN321/SP.png)\n","![SP Transposition]","({{ site.baseurl }}/assets/resources/SOEN321/SP_T.png)"),Object(n.b)("h4",{id:"feistel-structure"},"Feistel structure"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Overview"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Consists of a number of identical rounds of processing"),Object(n.b)("li",{parentName:"ol"},"In each round, a substitution is performed on 1/2 of plaintext block, followed by a permutation that interchanges two halves"),Object(n.b)("li",{parentName:"ol"},"The original key is expanded so a different key is used in each round"),Object(n.b)("li",{parentName:"ol"},"The Data Encryption Standard (DES) exhibits this structure"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$L",Object(n.b)("em",{parentName:"li"},"i = R"),"{i-1}$"),Object(n.b)("li",{parentName:"ul"},"$R",Object(n.b)("em",{parentName:"li"},"i=L"),"{i-1}\\oplus f(R_{i-1},K_i)$")))),Object(n.b)("p",null,"![Feistel Structure]","({{ site.baseurl }}/assets/resources/SOEN321/Feistel_Structure.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Feistel structure parameters",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Block size & key size:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"larger means greater security, but may slow down encryption/decryption speed"))),Object(n.b)("li",{parentName:"ul"},"Number of rounds:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"more rounds means greater strength"),Object(n.b)("li",{parentName:"ul"},"typically 16 rounds"))),Object(n.b)("li",{parentName:"ul"},"Subkey generation algorithm & round function:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"greater complexity should lead to greater cryptanalysis resistance")))))),Object(n.b)("h3",{id:"47-data-encryption-standard-des"},"4.7 Data Encryption Standard (DES)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Overview",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Use the Feistel structure",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Block length $n=64$, key size $k=56$."),Object(n.b)("li",{parentName:"ul"},"Number of rounds is $16$."))))),Object(n.b)("li",{parentName:"ul"},"S-box (substitution-box)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Outer bits: two bits (the first and last bits)"),Object(n.b)("li",{parentName:"ul"},"Inner bits: the other four bits between the first and last bits"),Object(n.b)("li",{parentName:"ul"},"e.g.: $011011$, outer bits are $01$, inner bits are $1101$.")))),Object(n.b)("p",null,"![S-box]","({{ site.baseurl }}/assets/resources/SOEN321/S_box.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Double/Triple encryption (DES)"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The security of DES depends on its large key space.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Double encryption should ",Object(n.b)("strong",{parentName:"p"},Object(n.b)("em",{parentName:"strong"},"double"))," the size ($2^{112}$) of the key space?")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"$C=E",Object(n.b)("em",{parentName:"p"},"{k_2}(E"),"{k_1}(P))$"),Object(n.b)("p",{parentName:"li"},"![Double/Triple encryption]","({{ site.baseurl }}/assets/resources/SOEN321/D_T_encryption.png)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Meet-in-the-middle attack (DES)"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Double-DES: $M=E",Object(n.b)("em",{parentName:"p"},"{k_1}(P)=D"),"{k_2}(C)$"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Compute and store $E_{K_1}(P)$ for all possible $K_1$"),Object(n.b)("li",{parentName:"ol"},"Compute and store $D_{K_2}(C)$ for all possible $K_2$"),Object(n.b)("li",{parentName:"ol"},"Match"),Object(n.b)("li",{parentName:"ol"},"Reduces key search from $2^{2k}$ to $2^k$ at the expense of addition storage $2^k$."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Triple encryption: Security of $2^{112}$")))))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Alternative to DES"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Double-DES - no security advantage"),Object(n.b)("li",{parentName:"ul"},"Triple-DES - secure, but slow"),Object(n.b)("li",{parentName:"ul"},"So, Advanced Encryption Standard (AES)")))),Object(n.b)("h3",{id:"48-advanced-encryptioin-standard-aes"},"4.8 Advanced Encryptioin Standard (AES)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Overview"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Block length: $128$",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Consider it as a $4\\times4$ matrix of bytes: $4\\times4=16\\text{ bytes}, 16\\times8=128\\text{ bits}$"))),Object(n.b)("li",{parentName:"ul"},"Key length: AES-128 (n=10), AES-192 (n=12), AES-256 (n=14)"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Derive round kyes (KeyExpansion): State = X(input)")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Initial round: AddRoundKey(State, $Key_0$): State $\\oplus$ Expanded key")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Rounds (Nr-1 times)"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"SubBytes(State, S-box): a substitution step"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Each byte in the state is replaced with its entry in a fixed 8-bit lookup table S (substitution box or S-box)."),Object(n.b)("li",{parentName:"ul"},"Provides non-linearity.")),Object(n.b)("p",{parentName:"li"},"![SubBytes]","({{ site.baseurl }}/assets/resources/SOEN321/SubBytes.png)")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"ShiftRows(State): a transpositioin step"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Avoid the columns being encrypted independently.")),Object(n.b)("p",{parentName:"li"},"![ShiftRows]","({{ site.baseurl }}/assets/resources/SOEN321/ShiftRows.png)")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"MixColumns(State): "),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Each column of the state is multiplied with a fixed polynomial."),Object(n.b)("li",{parentName:"ul"},"Together ShiftRows, MixColumns provides diffusion.")),Object(n.b)("p",{parentName:"li"},"![MixColumns]","({{ site.baseurl }}/assets/resources/SOEN321/MixColumns.png)")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"AddRoundKey(State, $Key_R$):"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"The round subkey is combined with the state using bitwise XOR"),Object(n.b)("li",{parentName:"ul"},"For each round, a subkey is derived from the main key using Rijndael's key schedule")),Object(n.b)("p",{parentName:"li"},"![AddRoundKey]","({{ site.baseurl }}/assets/resources/SOEN321/AddRoundKey.png)")))),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Final Round (no MixColumns)"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"SubBytes"),Object(n.b)("li",{parentName:"ol"},"ShiftRows"),Object(n.b)("li",{parentName:"ol"},"AddRoundKey"))),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Y(output) = State")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Attack"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"No practical attacks to date"),Object(n.b)("li",{parentName:"ul"},"No attacks on full AES versions")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"5-hash-functions"},"5. Hash Functions"),Object(n.b)("h3",{id:"51-what-it-is"},"5.1 What it is"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Input: a string $M$ of arbitrary length, called the ",Object(n.b)("em",{parentName:"li"},"preimage"),"."),Object(n.b)("li",{parentName:"ul"},"Output: a string $h(M)$ of fixed length, called ",Object(n.b)("em",{parentName:"li"},"hash-value"),", ",Object(n.b)("em",{parentName:"li"},"hash-code"),", ",Object(n.b)("em",{parentName:"li"},"hash-result"),", or ",Object(n.b)("em",{parentName:"li"},"hash"),"."),Object(n.b)("li",{parentName:"ul"},"Collsions: $h(M)$ is a many-to-one function",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Assume $t$ to $n$, and $h$ is random."),Object(n.b)("li",{parentName:"ul"},"$2^t$ input, $2^n$ output, so $2^{t-n}$ inputs would map to the same output."),Object(n.b)("li",{parentName:"ul"},"Collisions probability: $1/2^{n}$"))),Object(n.b)("li",{parentName:"ul"},"Properties:",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Compression"),Object(n.b)("li",{parentName:"ol"},"Ease of computation"),Object(n.b)("li",{parentName:"ol"},"Pre-image resistance (one-way property)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Given $y$, to find any pre-image $x'$ such that $h(x')=y$."),Object(n.b)("li",{parentName:"ul"},"But remember: there are no known provably one-way functions."))),Object(n.b)("li",{parentName:"ol"},"Second pre-image resistance (Weak collision resistance)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Given $x$, to find a 2nd-preimage $x'$ where $x'\\neq x$ such that $h(x')=h(x)$."))),Object(n.b)("li",{parentName:"ol"},"Collision resistance (Strong collision resistance)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Find any $x', x$ where $x'\\neq x$ such that $h(x')=h(x)$."),Object(n.b)("li",{parentName:"ul"},"Need to guess $2^{n/2}$ inputs before finding a collision (birthday paradox)."))))),Object(n.b)("li",{parentName:"ul"},"Examples:",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"MD5: 128-bit hash"),Object(n.b)("li",{parentName:"ol"},"SHA-1: 160-bit hash"),Object(n.b)("li",{parentName:"ol"},"SHA-2 (SHA-256): 256/384/512-bit hash"),Object(n.b)("li",{parentName:"ol"},"SHA-3"))),Object(n.b)("li",{parentName:"ul"},"Attack",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Dishonest signer",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Signs $x_1$, later claims signed $x_2$ instead."))),Object(n.b)("li",{parentName:"ol"},"Dishonest verifier",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Gets signature on $x_1$, later claims signature on $x_2$.")))))),Object(n.b)("h3",{id:"52-classification"},"5.2 Classification"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"keyed",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Message authentication (MACs)"),Object(n.b)("li",{parentName:"ul"},"Other applications"))),Object(n.b)("li",{parentName:"ul"},"Unkeyed",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Modification detection (MDCs)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"One-way hash function (OWHF)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Preimage and 2nd-preimage resistance"),Object(n.b)("li",{parentName:"ul"},"$n\\geq128$"))),Object(n.b)("li",{parentName:"ul"},"Collision resistant hash function (CRHF)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"2nd-preimage and collision resistance"),Object(n.b)("li",{parentName:"ul"},"$n\\geq256$ because of birthday paradox ($2^{256/2}=2^{128}$).",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Assumptions: $2^{128}$ operations are infeasible. "))))))),Object(n.b)("li",{parentName:"ul"},"Other applications")))),Object(n.b)("h3",{id:"53-how-to-build-a-hash-function"},"5.3 How to build a hash function"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Modular arithmetic"),Object(n.b)("li",{parentName:"ol"},"Block ciphers"),Object(n.b)("li",{parentName:"ol"},"Dedicated design")),Object(n.b)("h3",{id:"54-general-structure-of-iterated-hash-functions"},"5.4 General structure of iterated Hash Functions"),Object(n.b)("p",null,"![Iterated Hash Functions]","({{ site.baseurl }}/assets/resources/SOEN321/Iterated_Hash_function.png)"),Object(n.b)("h4",{id:"the-merkledamg\xe5rd-md-construction-of-hash-functions"},"The Merkle\u2013Damg\xe5rd (MD) Construction of hash functions"),Object(n.b)("p",null,"![Merkle\u2013Damg\xe5rd Construction]","({{ site.baseurl }}/assets/resources/SOEN321/MD_Scheme.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Padding, because compressions functions cannot handle inputs of arbitrary size."),Object(n.b)("li",{parentName:"ol"},"Divide into equal parts."),Object(n.b)("li",{parentName:"ol"},"$H",Object(n.b)("em",{parentName:"li"},"i=f(H"),"{i-1}, M_i)$"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Properties:"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"If $f$ is collision resistant, so is $h$.")))),Object(n.b)("h3",{id:"55-hash-functions-based-on-block-ciphers"},"5.5 Hash functions based on block ciphers"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Why",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Trust"),Object(n.b)("li",{parentName:"ul"},"Reduce design, evaluation, and implementation effort"),Object(n.b)("li",{parentName:"ul"},"Compact implementation"))),Object(n.b)("li",{parentName:"ul"},"Why not",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Slow"),Object(n.b)("li",{parentName:"ul"},"weaknesses which are not relevant to encryption",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Block cipher could become weaken when used in $h()$.")))))),Object(n.b)("h3",{id:"56-applications"},"5.6 Applications"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Data integrity",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Messages"),Object(n.b)("li",{parentName:"ul"},"Files"))),Object(n.b)("li",{parentName:"ul"},"Confirmation of knowledge",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Passwords"))),Object(n.b)("li",{parentName:"ul"},"PRBGs: Cryptographically secure pseudo-random bit sequences generator",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Hash functions are designed to be \u201crandom functions\u201d of the input."),Object(n.b)("li",{parentName:"ul"},"Examples: ",Object(n.b)("inlineCode",{parentName:"li"},"/dev/random"),", ",Object(n.b)("inlineCode",{parentName:"li"},"/dev/urandom")," (Linux)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Acting as an entropy pool."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"/dev/random")," blocks when no bits available, but ",Object(n.b)("inlineCode",{parentName:"li"},"/dev/urandom")," keeps going by SHA-1 (later by ChaCha20)."))),Object(n.b)("li",{parentName:"ul"},"Seed",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Avoid to use a simple value that an attacker could guess, e.g.:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"System time"),Object(n.b)("li",{parentName:"ul"},"Process ID")))))))),Object(n.b)("h3",{id:"57-pre-computation-attacks-rainbow-table-hash-chain-attacks"},"5.7 Pre-computation attacks (Rainbow-table hash-chain attacks)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How to",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Pre-compute all hash values under given inputs, and only store some fraction to save space (space-time tradeoff) to optimize future search."),Object(n.b)("li",{parentName:"ul"},"Variable-length messages do not generally have this problem, since input space is large",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Example: passwords have a fixed size, rainbow-table can be applied."))))),Object(n.b)("li",{parentName:"ul"},"Protect against pre-computation: salts",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Random value $s$ prepended to $p$ prior to calculating hash: $h(s","|","|","p)$."),Object(n.b)("li",{parentName:"ul"},"So an attacker would need to build a table for each possible salt value.")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"6-message-authentication-code-mac"},"6. Message Authentication Code (MAC)"),Object(n.b)("h3",{id:"61-what-it-is"},"6.1 What it is"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Keyed hash functions are called MACs, which use both $M$ and a key $k$ as input."),Object(n.b)("li",{parentName:"ul"},"Why need it",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Encryption alone does not provide data integrity."))),Object(n.b)("li",{parentName:"ul"},"Goal",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"add authentication to the hash-value by using a secret (symmetric) key."))),Object(n.b)("li",{parentName:"ul"},"Properties",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Should be difficult to create a valid MAC without knowledge of secret key"))),Object(n.b)("li",{parentName:"ul"},"Usage",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Message authentication: Alice sends $M ","|","|"," h_k(M)$"),Object(n.b)("li",{parentName:"ul"},"Message authentication and confidentiality, where authentication is tied to:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Plaintext: $E",Object(n.b)("em",{parentName:"li"},"{k_2}(M","|","|","h"),"{k_1}(M))$"),Object(n.b)("li",{parentName:"ul"},"Ciphertext: $E",Object(n.b)("em",{parentName:"li"},"{k_2}(M)","|","|","h"),"{k",Object(n.b)("em",{parentName:"li"},"1}(E"),"{k_2}(M))$"))),Object(n.b)("li",{parentName:"ul"},"Weakness: Does not provide non-repudiation")))),Object(n.b)("h3",{id:"62-mdc-vs-mac"},"6.2 MDC vs MAC"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"MDC should not be used for a MAC"),Object(n.b)("li",{parentName:"ul"},"$MAC=h(k","|","|","x)$: ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Length_extension_attack"}),"length-textension attack"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"$h$ is an interated MDC with compression function $f$."),Object(n.b)("li",{parentName:"ol"},"$y$ is an attacker-controlled message."),Object(n.b)("li",{parentName:"ol"},"Attacker can computer $f(MAC,y)$ to obtain $MAC'=h(k","|","|","x","|","|","y)$ without knowing $k$."))),Object(n.b)("li",{parentName:"ul"},"$MAC=h(x","|","|","k)$: collision",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Collision in the hash function will lead to a collision in the MAC.")))),Object(n.b)("h3",{id:"63-hash-based-mac"},"6.3 Hash-based MAC"),Object(n.b)("p",null,Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/HMAC"}),"HMAC")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"$HMAC(x)=h\\big(k","|","|","p_1","|","|","h(k","|","|","p_2","|","|","x)\\big)$",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$k$ is the key $K$ padded with zeros on left so it has length of 1 block for compression function."),Object(n.b)("li",{parentName:"ul"},"$p_1, p_2$ are distinct repeated byte strings of length $b$"),Object(n.b)("li",{parentName:"ul"},"$h$ any cryptographic hash function"))),Object(n.b)("li",{parentName:"ul"},"SHA-3 itself is immune to length extension attacks, so $MAC=SHA3(key","|","|","message)$ would be sufficient. ")),Object(n.b)("h3",{id:"64-mac-from-block-ciphers-cbc-mac"},"6.4 MAC from block ciphers: CBC MAC"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Problematic if",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Weak block cipher is used (e.g. DES)"),Object(n.b)("li",{parentName:"ul"},"Message length is variable")))),Object(n.b)("h3",{id:"65-password-based-key-derivation-function-pbkdf2"},"6.5 Password-Based Key Derivation Function (PBKDF2)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"$DK=PBKDF2(PRF,P,S,c,dkLen)$",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$PRF$: hash or MAC function"),Object(n.b)("li",{parentName:"ul"},"$P$: Password"),Object(n.b)("li",{parentName:"ul"},"$S$: Salt value"),Object(n.b)("li",{parentName:"ul"},"$c$: Number of iterations"),Object(n.b)("li",{parentName:"ul"},"$dkLen$: required key length")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"7-public-key-cryptography-and-ssl"},"7. Public Key Cryptography and SSL"),Object(n.b)("h3",{id:"71-overview"},"7.1 Overview"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Why",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"In symmetric key systems, we have to share a secret key that nobody else knows."),Object(n.b)("li",{parentName:"ul"},"Split this key into two pieces, one is public, the other is private."))),Object(n.b)("li",{parentName:"ul"},"How",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Uses number theoretic concepts: factoring, quadratic residue, RSA/DH problems"))),Object(n.b)("li",{parentName:"ul"},"It is asymmetric cryptography."),Object(n.b)("li",{parentName:"ul"},"Symmetric vs. public key Cryptography",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Keys in symmetric cryptosystem",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"random bit strings"),Object(n.b)("li",{parentName:"ul"},"no special mathematical properties"),Object(n.b)("li",{parentName:"ul"},"generation is relatively easy"))),Object(n.b)("li",{parentName:"ul"},"Keys in asymmetric cryptosystem",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"have speical mathematical properties"),Object(n.b)("li",{parentName:"ul"},"generation is computationally expensive"))),Object(n.b)("li",{parentName:"ul"},"Key sizes are not comparable",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"RSA-1024"),Object(n.b)("li",{parentName:"ul"},"AES-128"),Object(n.b)("li",{parentName:"ul"},"But still AES-128 is better"))))),Object(n.b)("li",{parentName:"ul"},"Advantages",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Only private key must be secret",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Still, authenticity of public key must be guaranteed."))),Object(n.b)("li",{parentName:"ul"},"The number of keys required is smaller than if symmetric keys used in large networks.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Symmetric: Every pair of 2 people need a different key, $\\binom{n}{2}=n(n-1)/2\\in O(n^2)$"),Object(n.b)("li",{parentName:"ul"},"Public key system: Every one has a key pair: $2n\\in O(n)$"))))),Object(n.b)("li",{parentName:"ul"},"Disadvantages",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Speed: Encryption is much slower than symmetric ciphers."),Object(n.b)("li",{parentName:"ul"},"Key sizes are typically much larger"),Object(n.b)("li",{parentName:"ul"},"No public key cipher proven to be secure (although the same can be said for block ciphers)")))),Object(n.b)("h3",{id:"72-public-key-cryptography"},"7.2 Public Key Cryptography"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Uses two different keys: one publie $K_e$, the other private $K_d$",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Alice generate $K_d$ only known to her."),Object(n.b)("li",{parentName:"ol"},"Alice generate $K_e$ which she publishes, avaliable to both Bob and Oscar."),Object(n.b)("li",{parentName:"ol"},"Knowledge of $K_e$ does not reveal $K_d$, or even given an advantage to Oscar trying to find $K_d$."),Object(n.b)("li",{parentName:"ol"},"Alternatvie notation for Alice's keys: $K_A, {K_A}^{-1}$."))),Object(n.b)("li",{parentName:"ul"},"Theory: trapdoor one-way function",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"A function $f:","\\","{","0,1","\\","}","^",Object(n.b)("em",{parentName:"li"}," \\rightarrow ","\\","{","0,1","\\","}","^"),"$ is a trapdoor one-way function if and only if $f(x)$ is a one-way function."),Object(n.b)("li",{parentName:"ul"},"Given some extra information, it becomes feasible to compute $f^{-1}$."),Object(n.b)("li",{parentName:"ul"},"Public key cyrptography relies on trapdoor one-way function."))),Object(n.b)("li",{parentName:"ul"},"Applications",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Encryption: let anayone send you a message that only you can read."),Object(n.b)("li",{parentName:"ul"},"Signature: let anyone verify that a message is from you.")))),Object(n.b)("h3",{id:"73-public-key-encryption"},"7.3 Public Key Encryption"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Public-Private Key Pairs Properties",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Should be infeasible to find decryption key given encryption key and algorithm."),Object(n.b)("li",{parentName:"ol"},"Public key schemes utilise problems that are easy (P type) in one way but hard (NP type) in the other way, eg:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Exponentiation vs. logs"),Object(n.b)("li",{parentName:"ul"},"Multiplication vs. factoring"))))),Object(n.b)("li",{parentName:"ul"},"How",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Alice wants to send a message $M$ to Bob. She knows his public key $K_{e,Bob}$ since it is public."),Object(n.b)("li",{parentName:"ol"},"Alice encrypts $M$ using $K_{e,Bob}$ producing $C$."),Object(n.b)("li",{parentName:"ol"},"Bob decrypts $C$ using $K",Object(n.b)("em",{parentName:"li"},"{d,Bob}$, a private key generated by Bob that corresponds to $K"),"{e,Bob}$.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Only $K",Object(n.b)("em",{parentName:"li"},"{d,Bob}$ can decrypt a message encrypted with $K"),"{e,Bob}$."),Object(n.b)("li",{parentName:"ul"},"Notice this means that even Alice cannot decrypt $C$.")))))),Object(n.b)("p",null,"![Public Key Encryption]","({{ site.baseurl }}/assets/resources/SOEN321/Public_Key_Encryption.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Attack: Man-in-the-middle attack (MITM)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Substitute different public keys between two users"),Object(n.b)("li",{parentName:"ul"},"Adversary: $(e', d')$"),Object(n.b)("li",{parentName:"ul"},"All public key systems are vulnerable to MITM, must use ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"authentic"))," public keys.")))),Object(n.b)("p",null,"![Public Key Encryption MITM]","({{ site.baseurl }}/assets/resources/SOEN321/Public_Key_Encryption_MITM.png)"),Object(n.b)("h3",{id:"74-public-key-signatures"},"7.4 Public Key Signatures"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Signatures are for integrity and authentication of a message."),Object(n.b)("li",{parentName:"ul"},"Alice uses her private key $K",Object(n.b)("em",{parentName:"li"},"{d,Alice}$ to sign $M$ to produce $Sign"),"{Alice}(M)$."),Object(n.b)("li",{parentName:"ul"},"Bob uses Alice's public key $K",Object(n.b)("em",{parentName:"li"},"{e,Alice}$ to verify $Sign"),"{Alice}(M)$."),Object(n.b)("li",{parentName:"ul"},"Typical usage mode:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Practically, the entire message is not encrypted with a public key, or signed with a private key",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Reason: Computational expense"))),Object(n.b)("li",{parentName:"ul"},"Encryption: encrypt a symmetric key using the public key, then the message encrypted with the symmetric key."),Object(n.b)("li",{parentName:"ul"},"Signature: sign $H(M)$ instead of $M$.")))),Object(n.b)("h3",{id:"75-diffie-hellman-key-exchange-d-h-key-exchange"},"7.5 Diffie-Hellman Key Exchange (D-H Key Exchange)"),Object(n.b)("p",null,"![D-H Key Exchange]","({{ site.baseurl }}/assets/resources/SOEN321/D_H_Key.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Overview",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Enables two parties to jointly establish a shared secret key, no prior shared secret"),Object(n.b)("li",{parentName:"ul"},"Based on exponentiation in a finite field (modulo a prime)"),Object(n.b)("li",{parentName:"ul"},"Weakness: no authentication"),Object(n.b)("li",{parentName:"ul"},"Security relies on the difficulty of computing discrete logarithms (similar to factoring)"))),Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$p$, a large prime integer, public"),Object(n.b)("li",{parentName:"ul"},"$g$, a primitive root mod $p$, public (also called a generator)"),Object(n.b)("li",{parentName:"ul"},"Session key is then obtained by both parties calculating:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$a,b$ are private to Alice and Bob respectively"),Object(n.b)("li",{parentName:"ul"},"$K_{ab}=g^{ab}\\pmod p$"),Object(n.b)("li",{parentName:"ul"},"Alice can compute $K_{ab}={g^{b}}^a\\pmod p$"),Object(n.b)("li",{parentName:"ul"},"Bob can compute $K_{ab}={g^{a}}^b\\pmod p$"))),Object(n.b)("li",{parentName:"ul"},"$","\\","{","Message, Password","\\","}","_k$"))),Object(n.b)("li",{parentName:"ul"},"Attack",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"The attacker needs either $a$ or $b$ to compute $K_{ab}$."),Object(n.b)("li",{parentName:"ul"},"Or Man in the Middle")))),Object(n.b)("p",null,"![D-H Man in the Middle]","({{ site.baseurl }}/assets/resources/SOEN321/mitm.png)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"D-H Man in the Middle")),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Why it works? No authentication"),Object(n.b)("li",{parentName:"ul"},"How it works?",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Alice sent $g^a$, Eve sent $g^{a'}$, Bod received $g^{a'}$"),Object(n.b)("li",{parentName:"ol"},"Bob sent $g^b$, Eve sent $g^{b'}$, Alice received $g^{b'}$"))),Object(n.b)("li",{parentName:"ul"},"How it can be solved?",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Sign the $g^a$ and $g^b$ because the sign key is private."),Object(n.b)("li",{parentName:"ul"},"But have to share the key, leads to new problem")))))),Object(n.b)("h3",{id:"76-password-authenticated-key-exchange"},"7.6 Password Authenticated Key Exchange"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Definition"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Two parties share only a weak/low-entropy secret, e.g., a password"),Object(n.b)("li",{parentName:"ul"},"Establish a secure channel between the users using only the shared secret and mutual authentication"),Object(n.b)("li",{parentName:"ul"},"The channel must be protected by a high-entropy session key"),Object(n.b)("li",{parentName:"ul"},"Offline guessing attacks on the weak secret must be infeasible"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"But how to derive a high-entropy secret from a low entropy one?")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Example"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Password: 8 bits"),Object(n.b)("li",{parentName:"ul"},"Generation: sha256(password) generates 256 bits to be used as a key"),Object(n.b)("li",{parentName:"ul"},"But no need to guess $2^{256}$"),Object(n.b)("li",{parentName:"ul"},"Still only guess $2^{8}$, then use sha256 to generate a key to test (need a testable sample)"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Authenticated Diffie-Hellman (DH encrypted key exchange)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Shared passwod"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$A\\rightarrow B: A,g,p,","\\","{","g^a \\pmod p ","\\","}","_{pwd}$"),Object(n.b)("li",{parentName:"ul"},"$B\\rightarrow A: B,","\\","{","g^b \\pmod p ","\\","}","_{pwd}$"),Object(n.b)("li",{parentName:"ul"},"$A\\rightarrow B: ","\\","{","C_A","\\","}","_K$"),Object(n.b)("li",{parentName:"ul"},"$B\\rightarrow A: ","\\","{","C_A, C_B","\\","}","_K$"),Object(n.b)("li",{parentName:"ul"},"$A\\rightarrow B: ","\\","{","C_B","\\","}","_K$"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Achieves:"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Mutual authentication"),Object(n.b)("li",{parentName:"ul"},"Strong session key"),Object(n.b)("li",{parentName:"ul"},"No offline attacks on PWD"),Object(n.b)("li",{parentName:"ul"},"Key confirmation")))),Object(n.b)("h3",{id:"77-rsa"},"7.7 RSA"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Theory",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Based on intractability of the integer factor factorization problem"))),Object(n.b)("li",{parentName:"ul"},"Key generation",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Generate 2 large and distinct primes $p$ and $q$, each roughly the same size.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"What if one number is not large? (Then, would be too easy to find the other number)"))),Object(n.b)("li",{parentName:"ol"},"Compute $n=pq$ and $\\Phi(n)=(p-1)(q-1)$.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$\\Phi(n)$ is a relative prime to $n$.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"e.g.: $\\Phi(5\\times 7)=4\\times 6 = 24$"))))),Object(n.b)("li",{parentName:"ol"},"Select a random integer $e: 1< e < \\Phi(n) $",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"gcd$(e,\\Phi(n))=1$"),Object(n.b)("li",{parentName:"ul"},"$e$ can be small for encryption efficiency."))),Object(n.b)("li",{parentName:"ol"},"Use extended Euclidean algorithm (HAC) to computer the unique integer $d,1< d <\\Phi(n)$, such that $ed\\equiv1\\pmod{\\Phi(n)}$."),Object(n.b)("li",{parentName:"ol"},"Keys",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Public key is $(e,n)$."),Object(n.b)("li",{parentName:"ul"},"Private key is $d$.")))))),Object(n.b)("h3",{id:"78-rsa-encryption"},"7.8 RSA Encryption"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Bob encryption",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Get Alice's authentic public key $(e,n)$"),Object(n.b)("li",{parentName:"ol"},"Take the message $M$ and represent it as an integer $m$ in the interval $","[0, n-1]","$.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"If $M$ cannot be represented in $","[0, n-1]","$, separate $M$ into blocks."))),Object(n.b)("li",{parentName:"ol"},"Computer $c=m^e\\pmod n$."),Object(n.b)("li",{parentName:"ol"},"Send $c$ to Alice."))),Object(n.b)("li",{parentName:"ul"},"Alice decryption",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Compute $m=c^d\\pmod n$."))))),Object(n.b)("li",{parentName:"ul"},"Why it works",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Since $ed\\equiv1\\pmod{\\Phi(n)}$, there exists an integer $k$ such that $ed\\equiv1+k\\cdot \\Phi(n)$"),Object(n.b)("li",{parentName:"ol"},"$c^d=m^{ed}=m^{1+k\\cdot \\Phi(n)}=m^1\\cdot m^{k\\cdot \\Phi(n)}=m^1\\cdot (m^{\\Phi(n)})^k=m^1\\cdot (1)^k=m$",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Euler's theorem: $m^{\\Phi(n)}\\pmod n =1$ where $gcd(\\Phi(n),n)=1$")))))),Object(n.b)("h3",{id:"79-digital-signature"},"7.9 Digital Signature"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Scheme:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"a secret signing key and a public verfication key"))),Object(n.b)("li",{parentName:"ul"},"Service provided:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Authentication"),Object(n.b)("li",{parentName:"ul"},"Data integrity"),Object(n.b)("li",{parentName:"ul"},"Non-Repudiation (MAC does not provide this)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$\\text{HMAC}_k(M)$, ?"),Object(n.b)("li",{parentName:"ul"},"$\\text{Sign}_A(M)$, because the private key is from the signer"))))),Object(n.b)("li",{parentName:"ul"},"Problem",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"How do we obtain someone's public key over a network, in a way that we can trust it belongs to the claimed entity?"),Object(n.b)("li",{parentName:"ul"},"Certificates",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Relies on a set of trusted third-party certificate authorities to establish the authenticity of certificates."),Object(n.b)("li",{parentName:"ul"},"Source is normally a trusted third party (also called: certificate authority (CA))."),Object(n.b)("li",{parentName:"ul"},"Root certificates are self-signed."))))),Object(n.b)("li",{parentName:"ul"},"Categories",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://crypto.stackexchange.com/questions/8820/signature-with-appendix"}),"With appendix"),": the signature $s$ of the message $M$ is usually appended to the unmodified message $M$. So $(M,s)$ or $M","|","|","s$ is sent."),Object(n.b)("li",{parentName:"ul"},"With message recovery: all or some of the message is embedded in the signature. When all of the message is embedded, the verification procedure requires only $s=Sign(M,PrivateKey)$ as input, and recovers $M$ as a by-product (that's known as total message recovery). Only the signature is sent; it embeds the message.")))),Object(n.b)("h3",{id:"710-rsa-signature"},"7.10 RSA Signature"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Overview",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"$R$: a redundancy function, maps message $M$ to RSA inputs."),Object(n.b)("li",{parentName:"ul"},"No confidentiality: anyone with Alice's public key can recover the message $M$."),Object(n.b)("li",{parentName:"ul"},"Authentication and integrity guarantees: only the holder of Alice's private key can create a valid mesage that has a signature verifiable with her public key."))),Object(n.b)("li",{parentName:"ul"},"How it works",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Alice wants to sign a message $M$:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Computes $M'=R(M)$."),Object(n.b)("li",{parentName:"ul"},"Computes $s={(M')}^d \\pmod n$."),Object(n.b)("li",{parentName:"ul"},"Alice's signature for $M$ is $s$."))),Object(n.b)("li",{parentName:"ul"},"Bob wants to verifty:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Obtains Alice's public key $(e,n)$."),Object(n.b)("li",{parentName:"ul"},"Computes $M'=s^e \\pmod n$."),Object(n.b)("li",{parentName:"ul"},"Verifies that $M'$ is in the redundancy space."),Object(n.b)("li",{parentName:"ul"},"Recovers $M=R^{-1}(M')$."))))),Object(n.b)("li",{parentName:"ul"},"RSA signature with Appendix",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Alice calculates $h(M)$."),Object(n.b)("li",{parentName:"ul"},"Alice signs $s=Sign(h(M))$."),Object(n.b)("li",{parentName:"ul"},"Alice transmits $(M,s)$."),Object(n.b)("li",{parentName:"ul"},"Bob can verify message by calculating $h(M)$ and comparing $h(M)$ to the verified signautre."),Object(n.b)("li",{parentName:"ul"},"PGP (Pretty Good Privacy) uses it to create signautre on email.")))),Object(n.b)("h3",{id:"711-ssl"},"7.11 SSL"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Properties",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"What it has",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Confidentiality"),Object(n.b)("li",{parentName:"ol"},"Message authenticity"),Object(n.b)("li",{parentName:"ol"},"Authentication",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Server authentication"),Object(n.b)("li",{parentName:"ul"},"Client authentication"))))),Object(n.b)("li",{parentName:"ul"},"What it hasn't",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Non-repudiation"),Object(n.b)("li",{parentName:"ol"},"Availability"))))),Object(n.b)("li",{parentName:"ul"},"Architecutre",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"between Application layer (HTTP/LDAP/POP3) and Transport layer (TCP)")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"8--usability-and-human-factors-in-security"},"8.  Usability and human factors in security"),Object(n.b)("h3",{id:"81-pretty-good-privacy-pgp"},"8.1 Pretty Good Privacy (PGP)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Steps:"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Install PGP/GPG/OpenPGP"),Object(n.b)("li",{parentName:"ol"},"Generate/import key pairs"),Object(n.b)("li",{parentName:"ol"},"Protect your private keys"),Object(n.b)("li",{parentName:"ol"},"Integrate/enable in your mail client"),Object(n.b)("li",{parentName:"ol"},"Publish your public key"),Object(n.b)("li",{parentName:"ol"},"Collect public keys of your contacts"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Encryptoin/Decryption\n","![PGP]","({{ site.baseurl }}/assets/resources/SOEN321/pgp.png)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.cs.berkeley.edu/~tygar/papers/Why_Johnny_Cant_Encrypt/OReilly.pdf"}),"Why Johnny Can\u2019t Encrypt"),": A Usability Evaluation of PGP 5.0"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Hypothesis: effective security requires a different usability standard, and that it will not be achieved through the user interface design techniques"),Object(n.b)("li",{parentName:"ul"},"Conclusions:",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"\u201cmaking security usable will require the development of domain-specific user interface design principles and techniques\u201d"),Object(n.b)("li",{parentName:"ol"},"\u201cuser interface design for effective security remains an open problem\u201d"))),Object(n.b)("li",{parentName:"ul"},"Usability for security: Security software is usable if the people who are excepted to use it:",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"are reliably made aware of the security tasks they need to perform;"),Object(n.b)("li",{parentName:"ol"},"are able to figure out how to successfully perform those tasks;"),Object(n.b)("li",{parentName:"ol"},"don't make dangerous errors; and"),Object(n.b)("li",{parentName:"ol"},"are sufficiently comfortable with the interface to continue using it."))),Object(n.b)("li",{parentName:"ul"},"Problematic properties of security",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"The unmotivated user property",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Secondary goal (security is not important)"),Object(n.b)("li",{parentName:"ul"},"Optimistic view (security is working; nothing to hide)"),Object(n.b)("li",{parentName:"ul"},"Get help from psychology studies (user capabilities: users cannot remeber long password or users do not know a strong password; how to motivate people)"))),Object(n.b)("li",{parentName:"ol"},"The abstraction property",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Policies are abstract"),Object(n.b)("li",{parentName:"ul"},"Policies vs. implementation"))),Object(n.b)("li",{parentName:"ol"},"The lack of feedback property",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"How to design effective warning dialogs"),Object(n.b)("li",{parentName:"ul"},"How to communicate system state"),Object(n.b)("li",{parentName:"ul"},"Too much feedback can also be bad"))),Object(n.b)("li",{parentName:"ol"},"The ",Object(n.b)("strong",{parentName:"li"},"barn door")," property",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Once a secret has been left accidentally, even for a short time, it's useless now."))),Object(n.b)("li",{parentName:"ol"},"The weakest link property",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"A single user error is enough to defeat a system"),Object(n.b)("li",{parentName:"ul"},"Users must follow all security guidelines"))))),Object(n.b)("li",{parentName:"ul"},"Expected usability standard for PGP",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"understand encrypt/decrypt"),Object(n.b)("li",{parentName:"ol"},"understand authentication"),Object(n.b)("li",{parentName:"ol"},"understand generate key pair"),Object(n.b)("li",{parentName:"ol"},"understand publish their public key"),Object(n.b)("li",{parentName:"ol"},"understand acquire public keys"),Object(n.b)("li",{parentName:"ol"},"manage to avoid dangerous errors"),Object(n.b)("li",{parentName:"ol"},"be able to succeed at all of the above within a few hours of reasonably motivated effort."))),Object(n.b)("li",{parentName:"ul"},"PGP's usability evaluation methods",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Cognitive walkthrough",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Simulated use by a domain expert"),Object(n.b)("li",{parentName:"ul"},"Step throug the use of the software"),Object(n.b)("li",{parentName:"ul"},"Learnability evaluation"))),Object(n.b)("li",{parentName:"ul"},"Cognitive walkthrough: Findings",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Irreversible actions",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Accidentally deleting the private key"),Object(n.b)("li",{parentName:"ul"},"Accidentally publicizing a key"),Object(n.b)("li",{parentName:"ul"},"Accidentally revoking a key"),Object(n.b)("li",{parentName:"ul"},"Forgetting the pass phrase (public keys collected from others)"),Object(n.b)("li",{parentName:"ul"},"Failing to back up the key rings"),Object(n.b)("li",{parentName:"ul"},"Sending a message to wrong recipients"),Object(n.b)("li",{parentName:"ul"},"Sending a confidential message as plaintext"),Object(n.b)("li",{parentName:"ul"},"Failing in signature verfication"),Object(n.b)("li",{parentName:"ul"},"Failong in revocation check"),Object(n.b)("li",{parentName:"ul"},"Trusting the wrong keys"))),Object(n.b)("li",{parentName:"ul"},"Consistency of terminologies",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Encoding vs. encrypting"))),Object(n.b)("li",{parentName:"ul"},'"Too much information"',Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Define what is important and what is not"),Object(n.b)("li",{parentName:"ul"},"Basic, intermediate, and advanced levels in UI"))))),Object(n.b)("li",{parentName:"ul"},"User study",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Test with real users"))),Object(n.b)("li",{parentName:"ul"},"User study results",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Dangerous errors",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"3/12 sent confidential message in plaintext"),Object(n.b)("li",{parentName:"ul"},"2 realized the mistake; one did not"),Object(n.b)("li",{parentName:"ul"},"1 forgot the passphrase"))),Object(n.b)("li",{parentName:"ul"},"Figuring out how to encrypt with any key",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"1/12 failed to encrypt at all"),Object(n.b)("li",{parentName:"ul"},"2 took close to half an hour"))),Object(n.b)("li",{parentName:"ul"},"Figuring out the correct key to encrypt with",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"7/11 used their own keys"),Object(n.b)("li",{parentName:"ul"},"1 generated key pairs for others"))),Object(n.b)("li",{parentName:"ul"},"Decrypting an email message",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"2/5 succeeded"))),Object(n.b)("li",{parentName:"ul"},"Deciding whether to trust keys from the key server",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"3/8 members expressed concern")))))))))),Object(n.b)("h3",{id:"82-human-as-an-attack-vector"},"8.2 Human as an attack vector"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Why",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Real attacks exploit psychology and technology"),Object(n.b)("li",{parentName:"ul"},"Phishing, vishing"),Object(n.b)("li",{parentName:"ul"},"Targeted vs. generic"),Object(n.b)("li",{parentName:"ul"},'Easy to launch online "imitation" attacks'),Object(n.b)("li",{parentName:"ul"},"Deception history"))),Object(n.b)("li",{parentName:"ul"},"Attacker's goals",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Information extraction"),Object(n.b)("li",{parentName:"ul"},"malware infection",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"APT (Advanced persistent threat)"),Object(n.b)("li",{parentName:"ul"},"Long-term attack vector"))),Object(n.b)("li",{parentName:"ul"},"Stealth"),Object(n.b)("li",{parentName:"ul"},"monetary gains")))),Object(n.b)("h3",{id:"83-phishing"},"8.3 Phishing"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"http://www.eecs.berkeley.edu/~tygar/papers/Phishing/why_phishing_works.pdf"}),"Why"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},'Natural trust: attacks via "trusted" contacts'),Object(n.b)("li",{parentName:"ul"},"Target the vulnerables: elderly, young-adults, low-income"),Object(n.b)("li",{parentName:"ul"},"Fit with natural work-flow",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"How to detect phishing emails when banks also send similar emalis"))),Object(n.b)("li",{parentName:"ul"},"Greed"),Object(n.b)("li",{parentName:"ul"},"Social validation"))),Object(n.b)("li",{parentName:"ul"},"Phishing user study",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Good phishing websites fooled 90% of participants."),Object(n.b)("li",{parentName:"ol"},"Existing anti-phishing browsing cues are ineffective."),Object(n.b)("li",{parentName:"ol"},"On average, the participant group made mistakes on the test set 40$ of the time."),Object(n.b)("li",{parentName:"ol"},"Popup warnings about fraudulent certificates were ineffective."),Object(n.b)("li",{parentName:"ol"},"Neither education, age, sex, previous experience, nor hours of computer use showed a statistically significant correlation with vulnerability to phishing."))),Object(n.b)("li",{parentName:"ul"},"Analysis of past attacks",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Victims' lack of knowledge"),Object(n.b)("li",{parentName:"ol"},"Visual deception"),Object(n.b)("li",{parentName:"ol"},"Bounded attention",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Too many indicators for different types of security issues")))))),Object(n.b)("h3",{id:"84-the-rsa-secureid-hack-hardware-authentication-token"},"8.4 The RSA SecureId Hack (Hardware authentication token)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"What it is",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Hardware authentication token"),Object(n.b)("li",{parentName:"ul"},"Dynamic code"))),Object(n.b)("li",{parentName:"ul"},"Use of RSA SecurID",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Second factor"),Object(n.b)("li",{parentName:"ul"},"Side notes: three factors of authentication",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Something you ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"know, have, are"))))))),Object(n.b)("li",{parentName:"ul"},"Issue",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Auth servers must be in sync and hall ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"all"))," seeds"))),Object(n.b)("li",{parentName:"ul"},"Biometrics authentication",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Once compormised, it cannot be replaced.")))),Object(n.b)("h3",{id:"85-deception"},"8.5 Deception"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"What it is",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Planned actions to mislead attackers and"),Object(n.b)("li",{parentName:"ul"},"To cause them to:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Confuse"),Object(n.b)("li",{parentName:"ul"},"Take/avoid specific actions"))),Object(n.b)("li",{parentName:"ul"},"Must be mixed with some \u201ctruth\u201d"),Object(n.b)("li",{parentName:"ul"},"Attackers must be given \u201chope\u201d"))),Object(n.b)("li",{parentName:"ul"},"Advantages",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"False info can reduce value of leaked databases"),Object(n.b)("li",{parentName:"ul"},"Learning the attacker\u2019s moves"),Object(n.b)("li",{parentName:"ul"},"Slow down the attacker")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"9-botnets-and-ddos"},"9. Botnets and DDoS"),Object(n.b)("p",null,"![Bot nets]","({{ site.baseurl }}/assets/resources/SOEN321/botnets.png)"),Object(n.b)("h3",{id:"91-botnets"},"9.1 Botnets"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"What it is"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Bot v.s. malware",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Bot is controlled by someone remotely"),Object(n.b)("li",{parentName:"ul"},"malware not"))),Object(n.b)("li",{parentName:"ul"},"Botnets: networks of infected end-hosts, called bots, that are under the control of a human operator commonly known as a ",Object(n.b)("em",{parentName:"li"},"botmaster"),".    "),Object(n.b)("li",{parentName:"ul"},"Bot software: advanced malware that makes the funcationality of a compromised host available to the botmaste."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Features"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"propagate like worms"),Object(n.b)("li",{parentName:"ul"},"hide from detection like many viruses"),Object(n.b)("li",{parentName:"ul"},"attack like many stand-alone tools"),Object(n.b)("li",{parentName:"ul"},"have an integrated ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"command and control system"))))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to infect"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},'"curious George" attacks'),Object(n.b)("li",{parentName:"ul"},"Backdoors from a previous infection"),Object(n.b)("li",{parentName:"ul"},"Trojaned applications"),Object(n.b)("li",{parentName:"ul"},"OS/browser/application vulnerabilities"),Object(n.b)("li",{parentName:"ul"},"Open file shares"),Object(n.b)("li",{parentName:"ul"},"P2P networks"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to control: "),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Centralized"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",Object(i.a)({parentName:"pre"},{}),"* Better control\n* Efficient attacks\n* Single-point vulnerability\n")),Object(n.b)("p",{parentName:"li"},"![Bot center]","({{ site.baseurl }}/assets/resources/SOEN321/bot_center.png)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"P2P"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",Object(i.a)({parentName:"pre"},{}),"* robust againt disruption\n* Inefficient\n* unreliable from attackers' viewpoint\n")),Object(n.b)("p",{parentName:"li"},"![Bot P2P]","({{ site.baseurl }}/assets/resources/SOEN321/bot_p2p.png)")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Hybrid: mixture of centralized and P2P")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How to protect masterbot: Dynamic domain names"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"A single domain is problematic"),Object(n.b)("li",{parentName:"ul"},"Multiple domains do not help",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Names can be learned in advanced and blocked"),Object(n.b)("li",{parentName:"ul"},"Bots can be reverse-engineered to extract domains"))),Object(n.b)("li",{parentName:"ul"},"Domain Generation Algorithms (DGA)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Generate domain names depending on one or more external information sources serving predictable seed values that can be accessed by bots and botmasters."),Object(n.b)("li",{parentName:"ul"},"Seed values: timestamp, Twitter trends"))))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Detection"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Passive techniques"),Object(n.b)("li",{parentName:"ul"},"Active techniques",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Sinkholing: Redirecting or dropping traffic destined to a C&C server, malware distribution server or attack server."))),Object(n.b)("li",{parentName:"ul"},"Reverse engineering of bots")))),Object(n.b)("h3",{id:"92-ddos-attacks"},"9.2 DDos attacks"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"DDos can:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Degrades a resource used by a victim (legitimate user) or"),Object(n.b)("li",{parentName:"ul"},"Denies use of a resource by a victim"),Object(n.b)("li",{parentName:"ul"},"Clog/crash a resource"))),Object(n.b)("li",{parentName:"ul"},"Target resources:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"network bandwidth, "),Object(n.b)("li",{parentName:"ul"},"CPU, "),Object(n.b)("li",{parentName:"ul"},"database/disk bandwidth")))),Object(n.b)("h3",{id:"93-ddos-attack-methods"},"9.3 DDos Attack methods"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"SYN floods"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"When TCP establishs a connection, it would handshake first:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"TCP three-way handshake: SYN, SYN-ACK, ACK"),Object(n.b)("li",{parentName:"ul"},"Half-open connections: SYN, SYN-ACK"))),Object(n.b)("li",{parentName:"ul"},"Weak point",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Each SYN packet (new connection) mandates the server to allocate resources"))),Object(n.b)("li",{parentName:"ul"},"Attack",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Attack on the ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"memory"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"Fake/genuine"))," IP addresses can be used to sent tons of SYN packets"))))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Application-based attacks"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"HTTP flood",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Generally launched from a botnet (need ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"genuine"))," IP, because have to establish the connection first)"),Object(n.b)("li",{parentName:"ul"},"Attack",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Attack on the ",Object(n.b)("strong",{parentName:"li"},Object(n.b)("em",{parentName:"strong"},"bandwidth"))," and CPU"),Object(n.b)("li",{parentName:"ul"},"Large files requests"),Object(n.b)("li",{parentName:"ul"},"Search service of a site"),Object(n.b)("li",{parentName:"ul"},"Complex queries"))))))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"DNS amplification attack"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"How it works"),Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Compromise an authoritative DNS server and publish a large TXT record"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"TXT record: a type of resource record in the Domain Name System (DNS) used to provide the ability to associate arbitrary text with a host or other name, such as human readable information about a server, network, data center, or other accounting information."),Object(n.b)("p",{parentName:"li"},"  ",Object(n.b)("inlineCode",{parentName:"p"},'example.com   IN   TXT   "This domain name is reserved for use in documentation"'))))),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"The attacker uses botnet to send UDP packets with ",Object(n.b)("em",{parentName:"p"},"spoofed")," IP addresses to a DNS recursor. The spoofed address on the packets points to the real IP address of the victim.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Each one of the UDP packets makes a request to a DNS resolver, often passing an argument such as \u201cANY\u201d in order to receive the largest response possible.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"After receiving the requests, the DNS resolver, which is trying to be helpful by responding, sends a large response to the spoofed IP address.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"The IP address of the target receives the response and the surrounding network infrastructure becomes overwhelmed with the deluge of traffic, resulting in a denial-of-service.")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Difficult to prevent"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Millions of open recursive DNS servers"),Object(n.b)("li",{parentName:"ul"},'High capacity servers ("fat" bandwidth)'),Object(n.b)("li",{parentName:"ul"},'DNS servers are not directly affected \u2013 no incentive to adopt known "good practices"'),Object(n.b)("li",{parentName:"ul"},"may not need to compromise an authoritative DNS server")))))),Object(n.b)("h3",{id:"94-mirai-attack"},"9.4 Mirai attack"),Object(n.b)("p",null,"![Mirai]","({{ site.baseurl }}/assets/resources/SOEN321/Mirai.png)"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Scan: sent TCP CYN probes to pseudorandom IPv4 addresses, excluding blacklist. ",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Why scan? and scan efficient?",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Stateless: no memeory allocation. But if recevied any response from any device, that device is a potential victim."))))),Object(n.b)("li",{parentName:"ol"},"If a potential victim is found, starts a brute-force login phase.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Use preconfigured dictionary, because resource is constrained."))),Object(n.b)("li",{parentName:"ol"},"Send the victim's IP and associated credentials to Report Server."),Object(n.b)("li",{parentName:"ol"},"Report Server dispatches the command to Loader."),Object(n.b)("li",{parentName:"ol"},"Loader will try to login the victim devicem then try to find out what kind of this device is."),Object(n.b)("li",{parentName:"ol"},"Loader will send corresponding binary to the victim, and the victime would join the botnet."),Object(n.b)("li",{parentName:"ol"},"Finally, the attacker would use the botnet to launch other attacks.")),Object(n.b)("hr",null),Object(n.b)("h2",{id:"13-domain-fronting"},"13. Domain Fronting"),Object(n.b)("h3",{id:"what"},"What"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Circumvents Internet ",Object(n.b)("em",{parentName:"li"},"censorship")," by obfuscating the domain of a HTTPS connection"),Object(n.b)("li",{parentName:"ul"},"Allows a user to connect to a blocked service (via DNS, IP or deep packet inspection)"),Object(n.b)("li",{parentName:"ul"},"uses different domain names at different layers of communication"),Object(n.b)("li",{parentName:"ul"},"In an HTTPS request, the destination domain name appears in",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"the DNS query,"),Object(n.b)("li",{parentName:"ul"},"the TLS Server Name Indication (SNI) extension,"),Object(n.b)("li",{parentName:"ul"},"and the HTTP Host header"))),Object(n.b)("li",{parentName:"ul"},"For",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"regular connections, the same domain name is used."),Object(n.b)("li",{parentName:"ul"},"domain-fonted connections, HTTP Host has the true destination domain.")))),Object(n.b)("h3",{id:"techniques"},"Techniques"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"With a front domain name: "),Object(n.b)("li",{parentName:"ol"},"Domainless fronting")),Object(n.b)("hr",null),Object(n.b)("h2",{id:"14-write-protection-against-privileged-data-tampering"},"14. Write Protection Against Privileged Data Tampering"),Object(n.b)("h3",{id:"141-legacy-solutions"},"14.1 Legacy solutions"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"detection via anti-malware"),Object(n.b)("li",{parentName:"ol"},"key recovery via reverse engineering"),Object(n.b)("li",{parentName:"ol"},"backup")),Object(n.b)("h3",{id:"142-academic-proposals"},"14.2 Academic proposals"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"monitoring file I/O activities"),Object(n.b)("li",{parentName:"ol"},"recording encryption keys"),Object(n.b)("li",{parentName:"ol"},"shadowing file writes")),Object(n.b)("h3",{id:"143-flashguard"},"14.3 FlashGuard"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"relies on intrinsic properties of SSD writes"),Object(n.b)("li",{parentName:"ul"},"cannot deal with data destruction malware")),Object(n.b)("h3",{id:"144-data-loss-prevention"},"14.4 Data loss prevention"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Trusted environments",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"TEE-Disk: Self-encrypting devices",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Fine-granined access control"),Object(n.b)("li",{parentName:"ol"},"programmable control (lock-unlock)"))),Object(n.b)("li",{parentName:"ul"},"TEE-Host: Intel TXT or AMD SVM",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Dynamic root of trust, measured, isolated"),Object(n.b)("li",{parentName:"ol"},"Sealed secret (platform state binding)"),Object(n.b)("li",{parentName:"ol"},"Device I/O access"))))),Object(n.b)("li",{parentName:"ul"},"Design",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Stand-alone: occasional interruptions due to TXT exclusiveness"),Object(n.b)("li",{parentName:"ul"},"Network-based: any user device, no interruptions"))),Object(n.b)("li",{parentName:"ul"},"Space cleanup",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Automatic stale version deletion"),Object(n.b)("li",{parentName:"ul"},"Mini file browser: manual file deletion (within the trusted updater)"))),Object(n.b)("li",{parentName:"ul"},"Challenges",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Safely use I/O devices from the user OS"),Object(n.b)("li",{parentName:"ol"},"Programming the SED OPAL interface"),Object(n.b)("li",{parentName:"ol"},"DMA access in TEE"),Object(n.b)("li",{parentName:"ol"},"Porting Flicker to Windows 10 64-bit"),Object(n.b)("li",{parentName:"ol"},"Security",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"Outside the trusted environment, can malware update files on the protected partition?"),Object(n.b)("li",{parentName:"ol"},"Inside the trusted environment, can malware trick the updater to write arbitrary content?"))))),Object(n.b)("li",{parentName:"ul"},"Attacks to consider",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Forged UI"),Object(n.b)("li",{parentName:"ul"},"Termination"),Object(n.b)("li",{parentName:"ul"},"Flaws in TEE implementations"),Object(n.b)("li",{parentName:"ul"},"Persistent attacker (delayed attacks after deletion)")))),Object(n.b)("hr",null),Object(n.b)("h2",{id:"tutorial-9---rsaaes-encryption-with-openssl"},"Tutorial 9 - RSA/AES encryption with OpenSSL"),Object(n.b)("h3",{id:"public-key-crypto"},"Public key crypto"),Object(n.b)("h4",{id:"release-your-public-key"},"Release your public key"),Object(n.b)("h4",{id:"usage"},"Usage:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Encryption")),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Anyone encrypts using your ",Object(n.b)("em",{parentName:"li"},"public")," key"),Object(n.b)("li",{parentName:"ol"},"Nobody can decrpty but you with your ",Object(n.b)("em",{parentName:"li"},"private")," key")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Signature")),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"You sign some data with your ",Object(n.b)("em",{parentName:"li"},"private")," key"),Object(n.b)("li",{parentName:"ol"},"Anyone can verify your signature with your ",Object(n.b)("em",{parentName:"li"},"public")," key")),Object(n.b)("h3",{id:"rsa-encryptiondecryption-with-openssl"},"RSA encryption/decryption with OpenSSL"),Object(n.b)("h4",{id:"generate-key"},"Generate key"),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl genrsa -aes256 -out alice.key 2048\n")),Object(n.b)("h4",{id:"steps"},"Steps"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Extract the public key")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsa -in alice.key -pubout -out alice.pub\n")),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"(Optional) look at Alice's public key")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsa -in alice.pub -pubin -noout -text\n")),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"Pass the public key to Bob"),Object(n.b)("li",{parentName:"ol"},"Bob encrypt the message with Alice's public key")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsautl -encrypt -inkey alice.pub -pubin -in secret.txt -out secret.txt.enc\n")),Object(n.b)("ol",{start:4},Object(n.b)("li",{parentName:"ol"},"Bob pass the encrypted message to Alice"),Object(n.b)("li",{parentName:"ol"},"Alice decrypt the message with her private key")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsautl -decrypt -inkey alice.key -in secret.txt.enc -out secret.txt.dec\n")),Object(n.b)("h4",{id:"problem"},"Problem"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Computation expensive"),Object(n.b)("li",{parentName:"ol"},"Plaintext's size should be smaller than the modulus (2048)")),Object(n.b)("h4",{id:"solution"},"Solution"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Hybrid encryption: Asymmetric and symmetric encryption"),Object(n.b)("li",{parentName:"ul"},"RSA encrypt a symmetric key to encrypt secret")),Object(n.b)("h3",{id:"aes-encryptiondecryption-with-openssl"},"AES encryption/decryption with OpenSSL"),Object(n.b)("h4",{id:"steps-1"},"Steps"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Bob generates a random AES key and IV:")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rand -hex -out aes.key 32\nopenssl rand -hex -out aes.iv 16\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"32"),"$=256$ bits (key size for AES-256)"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"16"),"$=128$ bits (block size for AES-256)")),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"Bob encrypts the message with his own AES key and IV")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl enc -aes-256-cbc -in secret.txt -out secret.txt.enc -K %key% -iv %iv% -p\n")),Object(n.b)("ol",{start:3},Object(n.b)("li",{parentName:"ol"},"Bob encrypts the AES key and IV with Alice's public key")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsautl -encrypt -inkey alice.pub -pubin -in aes.key -out aes.key.enc\nopenssl rsautl -encrypt -inkey alice.pub -pubin -in aes.iv -out aes.iv.enc\n")),Object(n.b)("ol",{start:4},Object(n.b)("li",{parentName:"ol"},"Bob send ",Object(n.b)("inlineCode",{parentName:"li"},"aes.key.enc, aes.iv.enc, secret.txt.enc")," to Alice"),Object(n.b)("li",{parentName:"ol"},"Alice decrypts the AES key and IV")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsautl -decrypt -inkey alice.key -in aes.key.enc -out aes.key.dec\nopenssl rsautl -decrypt -inkey alice.key -in aes.iv.enc -out aes.iv.dec\n")),Object(n.b)("ol",{start:6},Object(n.b)("li",{parentName:"ol"},"Alice decrypts the encrypted message")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl enc -d -aes-256-cbc -in secret.txt.enc -out secret.txt.dec -K\n%key% -iv %iv%\n")),Object(n.b)("h4",{id:"alternative-steps"},"Alternative Steps"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Use PBKDF2 to simplify key and IV generation")),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Bob eenerate a password randomly")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rand -hex -out pass.key 32\n")),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"Bob encrypts using a file as password")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl enc -aes-256-cbc -in secret.txt -out secret.txt.enc -pass file:pass.key -pbkdf2 -iter 100000 -md sha256\n")),Object(n.b)("ol",{start:3},Object(n.b)("li",{parentName:"ol"},"Bob encrypts the password file with Alice's public key")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsautl -encrypt -inkey alice.pub -pubin -in pass.key -out pass.key.enc\n")),Object(n.b)("ol",{start:4},Object(n.b)("li",{parentName:"ol"},"Bob send ",Object(n.b)("inlineCode",{parentName:"li"},"pass.key.enc, secret.txt.enc")," to Alice"),Object(n.b)("li",{parentName:"ol"},"Alice decrypts the password file")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl rsautl -decrypt -inkey alice.key -in pass.key.enc -out pass.key.dec\n")),Object(n.b)("ol",{start:6},Object(n.b)("li",{parentName:"ol"},"Alice decrypts the secret using the password file")),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"openssl enc -d -aes-256-cbc -in secret.txt.enc -out secret.txt.dec -pass\nfile:pass.key.dec -pbkdf2 -iter 100000 -md sha256\n")))}p.isMDXComponent=!0},185:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return O}));var i=a(0),l=a.n(i);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,i,l=function(e,t){if(null==e)return{};var a,i,l={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=l.a.createContext({}),p=function(e){var t=l.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},s=function(e){var t=p(e.components);return l.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=l.a.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,r=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),s=p(a),m=i,O=s["".concat(r,".").concat(m)]||s[m]||u[m]||n;return a?l.a.createElement(O,b(b({ref:t},o),{},{components:a})):l.a.createElement(O,b({ref:t},o))}));function O(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,r=new Array(n);r[0]=m;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b.mdxType="string"==typeof e?e:i,r[1]=b;for(var o=2;o<n;o++)r[o]=a[o];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);