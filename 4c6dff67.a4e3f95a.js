(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{189:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return m}));var a=n(2),r=n(9),o=(n(0),n(270)),l={title:"Map"},p={id:"programming/Go/3_10Map",isDocsHomePage:!1,title:"Map",description:"A map maps keys to values.",source:"@site/docs/programming/Go/3_10Map.mdx",permalink:"/docs/programming/Go/3_10Map",editUrl:"https://github.com/lingt-xyz/io/tree/master/docs/programming/Go/3_10Map.mdx",lastUpdatedAt:1598157283,sidebar:"go",previous:{title:"Array",permalink:"/docs/programming/Go/3_9Array"},next:{title:"New or Make",permalink:"/docs/programming/Go/3_11New_Make"}},i=[{value:"Map literals",id:"map-literals",children:[]},{value:"Mutating Maps",id:"mutating-maps",children:[]}],c={rightToc:i};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A map maps keys to values."),Object(o.b)("p",null,"The zero value of a map is ",Object(o.b)("inlineCode",{parentName:"p"},"nil"),". A ",Object(o.b)("inlineCode",{parentName:"p"},"nil")," map has no keys, nor can keys be added."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"make")," function returns a map of the given type, initialized and ready for use."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport "fmt"\n\ntype Vertex struct {\n    Lat, Long float64\n}\n\nvar m map[string]Vertex \n// m is type of map, key is type of string, value is type of Vertex\n\nfunc main() {\n    m = make(map[string]Vertex)\n    m["Bell Labs"] = Vertex{\n        40.68433, -74.39967,\n    }\n    fmt.Println(m["Bell Labs"])\n}\n\n\n// {40.68433 -74.39967}\n')),Object(o.b)("h2",{id:"map-literals"},"Map literals"),Object(o.b)("p",null,"Map literals are like struct literals, but the keys are required."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport "fmt"\n\ntype Vertex struct {\n    Lat, Long float64\n}\n\nvar m = map[string]Vertex{\n    "Bell Labs": Vertex{\n        40.68433, -74.39967,\n    },\n    "Google": Vertex{\n        37.42202, -122.08408,\n    },\n}\n\nfunc main() {\n    fmt.Println(m)\n}\n\n\n// map[Bell Labs:{40.68433 -74.39967} Google:{37.42202 -122.08408}]\n')),Object(o.b)("p",null,"If the top-level type is just a type name, you can omit it from the elements of the literal."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),'var m = map[string]Vertex{\n    "Bell Labs": {40.68433, -74.39967},\n    "Google":    {37.42202, -122.08408},\n}\n')),Object(o.b)("h2",{id:"mutating-maps"},"Mutating Maps"),Object(o.b)("p",null,"Insert or update an element in map ",Object(o.b)("inlineCode",{parentName:"p"},"m"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"m[key] = elem\n")),Object(o.b)("p",null,"Retrieve an element:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"elem = m[key]\n")),Object(o.b)("p",null,"Delete an element:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),"delete(m, key)\n")),Object(o.b)("p",null,"Test that a key is present with a two-value assignment:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),"elem, ok = m[key]\n\n// If elem or ok have not yet been declared you could use a short declaration form\nelem, ok := m[key]\n")),Object(o.b)("p",null,"If ",Object(o.b)("inlineCode",{parentName:"p"},"key")," is in ",Object(o.b)("inlineCode",{parentName:"p"},"m"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ok")," is ",Object(o.b)("inlineCode",{parentName:"p"},"true"),". If not, ",Object(o.b)("inlineCode",{parentName:"p"},"ok")," is ",Object(o.b)("inlineCode",{parentName:"p"},"false"),"."))}m.isMDXComponent=!0},270:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),m=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=m(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),b=m(n),u=a,d=b["".concat(l,".").concat(u)]||b[u]||s[u]||o;return n?r.a.createElement(d,p(p({ref:t},c),{},{components:n})):r.a.createElement(d,p({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<o;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);