(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{182:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(2),a=t(9),i=(t(0),t(275)),c={},o={id:"programming/container/Docker",isDocsHomePage:!1,title:"Docker",description:"Notes for docker command.",source:"@site/docs/programming/container/Docker.md",permalink:"/docs/programming/container/Docker",editUrl:"https://github.com/lingt-xyz/io/tree/master/docs/programming/container/Docker.md",lastUpdatedAt:1636471008,sidebar:"container",previous:{title:"Container",permalink:"/docs/programming/container/Container"}},l=[{value:"Images",id:"images",children:[]},{value:"Containers",id:"containers",children:[]},{value:"Docker hub",id:"docker-hub",children:[]},{value:"Host and Container",id:"host-and-container",children:[]},{value:"Commit",id:"commit",children:[]},{value:"CLI reference",id:"cli-reference",children:[]},{value:"Errors",id:"errors",children:[]},{value:"References",id:"references",children:[]}],b={rightToc:l};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Notes for docker command."),Object(i.b)("h2",{id:"images"},"Images"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"List all images: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker images"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Pull image from docker repo: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker pull ubuntu:18.04"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Create and run a container of an image in an interactive way: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker run -it ubuntu:18.04"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Create a ",Object(i.b)("em",{parentName:"p"},"new")," image from a container\u2019s changes: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker commit $CONTAINER_NAME [REPOSITORY[:TAG]]")))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"containers"},"Containers"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"List all containers: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker ps -a"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Remove a container: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker rm $CONTAINER_NAME")))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"docker-hub"},"Docker hub"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Push image to repo: ",Object(i.b)("inlineCode",{parentName:"li"},"$ docker push <hub-user>/<repo-name>:<tag>"))),Object(i.b)("h2",{id:"host-and-container"},"Host and Container"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Copy from container to host: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker cp <containerId>:/file/path/within/container /host/path/target"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Copy from host to container: ",Object(i.b)("inlineCode",{parentName:"p"},"$ docker cp /host/path/target <containerId>:/file/path/within/container")))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"commit"},"Commit"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"$ docker commit -m $message$ <containerId> <repo-name>:<tag>")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"cli-reference"},"CLI reference"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.docker.com/v17.12/edge/engine/reference/commandline/run/"}),"Reference")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"$ docker run [OPTIONS] IMAGE [COMMAND] [ARG...]")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--detach, -d"),": Run container in background and print container ID")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--env, -"),": Set environment variables")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--interactive, -i"),": Keep STDIN open even if not attached")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--name"),":\tAssign a name to the container")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--net, --network"),": Connect a container to a network")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--rm"),": Automatically remove the container when it exits")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--tty, -t"),": Allocate a pseudo-TTy")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"--volume, -v"),": Bind mount a volume"))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"errors"},"Errors"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Unable to remove repository reference")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-console"}),'Error response from daemon: conflict: unable to remove repository reference "$TAG/$NAME" (must force) - container 0bd2b54678c7 is using its referenced image 54bb4e8718e8\nError: failed to remove images: [$TAG/$NAME]\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://stackoverflow.com/questions/33907835/docker-error-cannot-delete-docker-container-conflict-unable-to-remove-reposito"}),"Solution"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-console"}),"$ docker ps -a               # Lists containers (and tells you which images they are spun from)\n$ docker images              # Lists images  \n$ docker rm <container_id>   # Removes a container\n\n$ docker rmi <image_id>      # Removes an image \n                            # Will fail if there is a running instance of that image i.e. container\n\n$ docker rmi -f <image_id>   # Forces removal of image even if it is referenced in multiple repositories, \n                            # i.e. same image id given multiple names/tags \n                            # Will still fail if there is a docker container referencing image\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"references"},"References"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/commandline/commit/"}),"commit")))}p.isMDXComponent=!0},275:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return s}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),p=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=p(e.components);return a.a.createElement(b.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,s=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return t?a.a.createElement(s,o(o({ref:n},b),{},{components:t})):a.a.createElement(s,o({ref:n},b))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var b=2;b<i;b++)c[b]=t[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);