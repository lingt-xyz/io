(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{177:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(9),i=(a(0),a(259)),c={title:"Class"},s={id:"programming/Java/8Class",isDocsHomePage:!1,title:"Class",description:"Definition",source:"@site/docs/programming/Java/8Class.mdx",permalink:"/docs/programming/Java/8Class",editUrl:"https://github.com/lingt-xyz/io/tree/master/docs/programming/Java/8Class.mdx",lastUpdatedAt:1598198409,sidebar:"java",previous:{title:"Control Flow",permalink:"/docs/programming/Java/7ControlFlow"},next:{title:"Inheritance",permalink:"/docs/programming/Java/9Inheritance"}},o=[{value:"Definition",id:"definition",children:[]},{value:"Example",id:"example",children:[]},{value:"Member Variables",id:"member-variables",children:[{value:"Access Modifiers",id:"access-modifiers",children:[]},{value:"Example",id:"example-1",children:[]}]},{value:"Methods",id:"methods",children:[{value:"Method Signature",id:"method-signature",children:[]},{value:"Overloading Methods",id:"overloading-methods",children:[]}]},{value:"Constructors",id:"constructors",children:[]},{value:"Passing Parameters",id:"passing-parameters",children:[{value:"By Reference or By Value?",id:"by-reference-or-by-value",children:[]},{value:"Definitions",id:"definitions",children:[]},{value:"Passing Primitive Data Type Arguments",id:"passing-primitive-data-type-arguments",children:[]},{value:"Passing Reference Data Type Arguments",id:"passing-reference-data-type-arguments",children:[]}]}],l={rightToc:o};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"definition"},"Definition"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"class MyClass[ extends MySuperClass[ implements YourInterface[, AnotherInterface]]] {\n    // field, constructor, and\n    // method declarations\n}\n\n/**\n * minimal declaration\n */\n\nclass MyClass {\n    // field, constructor, and \n    // method declarations\n}\n")),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"class Parent {\n}\n")),Object(i.b)("h2",{id:"member-variables"},"Member Variables"),Object(i.b)("p",null,"There are several kinds of variables:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Member variables in a class\u2014these are called fields."),Object(i.b)("li",{parentName:"ul"},"Variables in a method or block of code\u2014these are called local variables."),Object(i.b)("li",{parentName:"ul"},"Variables in method declarations\u2014these are called parameters.")),Object(i.b)("h3",{id:"access-modifiers"},"Access Modifiers"),Object(i.b)("p",null,"The first ","(","left-most",")"," modifier used lets you control what other classes have access to a member field. For the moment, consider only ",Object(i.b)("inlineCode",{parentName:"p"},"public")," and ",Object(i.b)("inlineCode",{parentName:"p"},"private"),". Other access modifiers will be discussed later."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"public")," modifier\u2014the field is accessible from all classes."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"private")," modifier\u2014the field is accessible only within its own class.")),Object(i.b)("h3",{id:"example-1"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"class Parent {\n    private int age;\n    \n    public int getAge() {\n        return this.age;\n    }\n        \n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n")),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("h3",{id:"method-signature"},"Method Signature"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"method's name")," and the ",Object(i.b)("strong",{parentName:"p"},"parameter types")," comprise the method signature."),Object(i.b)("h3",{id:"overloading-methods"},"Overloading Methods"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"class Parent {\n    public void say(String message){\n    }\n    \n    public void say(String[] messages){\n    }\n}\n")),Object(i.b)("h2",{id:"constructors"},"Constructors"),Object(i.b)("p",null,"Constructor declarations look like method declarations\u2014except that they use the ",Object(i.b)("strong",{parentName:"p"},"name of the class")," and have ",Object(i.b)("strong",{parentName:"p"},"no return type"),"."),Object(i.b)("p",null,"Constructors can be:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default constructor: if you did not define a constructor, the compiler will create a default one with no parameters."),Object(i.b)("li",{parentName:"ul"},"No-argument constructor: a constructor without any parameters."),Object(i.b)("li",{parentName:"ul"},"Parameterized constructor: a constructor accepts parameters."),Object(i.b)("li",{parentName:"ul"},"Copy constructor: a constructor accepts an object with the same type as its parameter.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"class Parent {\n    private String name;\n    private int age;\n    \n    // No-argument constructor\n    public Parent(){\n    }\n    \n    // Parameterized Constructor\n    public Parent(String name){\n        this.name = name;\n    }\n    \n    // Parameterized Constructor\n    public Parent(String name, int age){\n        this.name = name;\n        this.age = age;\n    }\n    \n    // Copy Constructor\n    public Parent(Parent p){\n        this.name = p.name;\n        this.age = age;\n    }\n}\n")),Object(i.b)("h2",{id:"passing-parameters"},"Passing Parameters"),Object(i.b)("h3",{id:"by-reference-or-by-value"},"By Reference or By Value?"),Object(i.b)("p",null,'{% hint style="warning" %}\nJava always passes arguments by ',Object(i.b)("strong",{parentName:"p"},"value"),".\n{% endhint %}"),Object(i.b)("h3",{id:"definitions"},"Definitions"),Object(i.b)("h4",{id:"reference"},"Reference"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.oracle.com/javase/tutorial/information/glossary.html#reference"}),"A data element whose value is an address."))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"Object o = new Object();\n")),Object(i.b)("p",null,"Here, ",Object(i.b)("inlineCode",{parentName:"p"},"o")," is a reference, and its value is ",Object(i.b)("em",{parentName:"p"},"an address"),"."),Object(i.b)("h4",{id:"value"},"Value"),Object(i.b)("p",null,"The literal value."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"int i = 1;\n")),Object(i.b)("p",null,"Here, ",Object(i.b)("inlineCode",{parentName:"p"},"i")," is a primitive type not a reference, and its value is ",Object(i.b)("inlineCode",{parentName:"p"},"1"),"."),Object(i.b)("h3",{id:"passing-primitive-data-type-arguments"},"Passing Primitive Data Type Arguments"),Object(i.b)("p",null,"Primitive arguments, such as an ",Object(i.b)("inlineCode",{parentName:"p"},"int")," or a ",Object(i.b)("inlineCode",{parentName:"p"},"double"),", are passed into methods by ",Object(i.b)("strong",{parentName:"p"},"value"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'public class PassPrimitiveByValue {\n\n    public static void main(String[] args) {\n           \n        int x = 3;\n           \n        // invoke passMethod() with  x as argument\n        passMethod(x);\n           \n        // print x to see if its value has changed\n        System.out.println("After invoking passMethod, x = " + x);\n           \n    }\n        \n    // change parameter in passMethod()\n    public static void passMethod(int p) {\n        p = 10;\n    }\n}\n')),Object(i.b)("p",null,"When you run this program, the output is:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"After invoking passMethod, x = 3\n")),Object(i.b)("h3",{id:"passing-reference-data-type-arguments"},"Passing Reference Data Type Arguments"),Object(i.b)("p",null,"Reference data type parameters, such as objects, are also passed into methods by ",Object(i.b)("strong",{parentName:"p"},"value"),"."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Recall that value is an address. \ud83d\ude4b\u2642 "))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'public class Main {\n     public static void main(String[] args) {\n          Foo f = new Foo("f");\n          changeReference(f); // It won\'t change the reference!\n          modifyReference(f); // It will change the object that the reference refers to!\n     }\n     public static void changeReference(Foo a) {\n          Foo b = new Foo("b");\n          a = b;\n     }\n     public static void modifyReference(Foo c) {\n          c.setAttribute("c");\n     }\n}\n')),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://stackoverflow.com/questions/7893492/is-java-really-passing-objects-by-value/7893495#7893495"}),"https://stackoverflow.com/questions/7893492/is-java-really-passing-objects-by-value/7893495#7893495")),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.oracle.com/javase/tutorial/java/javaOO/arguments.html"}),"https://docs.oracle.com/javase/tutorial/java/javaOO/arguments.html")))}b.isMDXComponent=!0},259:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=b(a),u=n,d=p["".concat(c,".").concat(u)]||p[u]||m[u]||i;return a?r.a.createElement(d,s(s({ref:t},l),{},{components:a})):r.a.createElement(d,s({ref:t},l))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var l=2;l<i;l++)c[l]=a[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);